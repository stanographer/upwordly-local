{"version":3,"file":"static/webpack/12.5615839d5f64f2e089ea.hot-update.js","sources":["webpack:///./src/firebase/db.js"],"sourcesContent":["import { db } from './firebase';\n\n// User methods ===========================================================\nexport const doCreateUser = (email, fullName, location, id, payment, token, username) =>\n    db.ref(`users/${id}`)\n        .set({\n          email,\n          fullName,\n          location,\n          payment,\n          token,\n          username,\n        });\n\nexport const checkDupeEmail = (email, cb) => {\n  db.ref('users')\n      .orderByChild('email')\n      .equalTo(email)\n      .on('value', snapshot => {\n        cb(!!snapshot.val());\n      });\n};\n\nexport const checkDupeUsername = (username, cb) => {\n  db.ref('users')\n      .orderByChild('username')\n      .equalTo(username)\n      .on('value', snapshot => {\n        cb(!!snapshot.val());\n      });\n};\n\nexport const getUser = (uid, cb) => {\n  db.ref(`users/${uid}`)\n      .once('value', snapshot => {\n        cb(snapshot.val());\n      })\n      .catch(err => {\n        cb(err);\n      });\n};\n\nexport const findUser = username => {\n  db.ref('users')\n      .orderByChild('username')\n      .equalTo(username);\n};\n\nexport const onceGetUsers = () =>\n    db.ref('users')\n        .once('value');\n\n// Job methods ===========================================================\nexport const createJob = (job, user, uid) => {\n  const newJob = {\n    createdTime: new Date().toUTCString(),\n    completedTime: '',\n    locked: false,\n    shortName: job.shortName.trim().toLowerCase(),\n    speakers: !!job.speakers && job.speakers.trim(),\n    started: null,\n    title: !!job.title && job.title.trim(),\n    username: user,\n  };\n\n  db.ref('jobs')\n      .push(newJob)\n      .then(job => {\n        db.ref(`users/${uid}/jobs`)\n            .push({\n              key: job.key,\n              shortName: newJob.shortName,\n            });\n      });\n};\n\nexport const checkDupeJob = (shortName, user, cb) => {\n  db.ref('jobs')\n      .orderByChild('shortName')\n      .equalTo(shortName)\n      .once('value', snapshot => {\n        if (!snapshot.val()) {\n          cb();\n        } else if (snapshot.val().username === user) {\n          return new Error('That job by that user already exists.');\n        }\n      })\n      .catch(err => err);\n};\n\nexport const getAllJobsByUser = (user, cb) => {\n  db.ref('jobs')\n      \n};\n\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAGA;AAEA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;;;;A","sourceRoot":""}