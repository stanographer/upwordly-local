{"version":3,"file":"static/webpack/2.275121278346c8bd17bb.hot-update.js","sources":["webpack:///./src/components/DashboardPages/DashboardComponent.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport JobCreator from '../../components/Widgets/JobCreator';\nimport JobList from '../../components/Widgets/JobList';\nimport Typed from 'react-typed';\nimport { db } from '../../firebase';\n\nconst DashboardComponent = ({user}) => {\n  console.log('dashboard props', user.uid);\n\n  let [authUser, setAuthUser] = useState({});\n  let [job, setJob] = useState({});\n  let [errors, setErrors] = useState([]);\n\n  const loadUser = user => {\n    setAuthUser(user);\n    console.log(user);\n  };\n\n  const setShortName = val => {\n    const re = /^[a-z0-9_\\-]+$/i;\n\n    val = val.trim().toLowerCase();\n\n    if (!val.match(re) && val !== '') {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n\n      setErrors([\n        'Your job shortname may only contain lower-case letters, numbers, hyphens, and underscores',\n      ]);\n    } else {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n\n      setErrors([]);\n    }\n  };\n\n  const setTitleAndSpeakers = (key, val) => {\n    // Replaces backticks with single quotes.\n    if (val.includes('`')) {\n      val = val.replace('`', '\\'');\n    }\n\n    // Escapes curly braces.\n    if (val.includes('{')) {\n      val = val.replace('{', '\\{');\n    }\n\n    if (val.includes('}')) {\n      val = val.replace('{', '\\}');\n    }\n\n    setJob({\n      ...job,\n      [key]: val,\n    });\n  };\n\n  useEffect(() => {\n    try {\n      db.getUser(user.uid, loadUser);\n    } catch (err) {\n      console.error('error', err);\n    }\n\n  }, []);\n\n  return (\n      <Fragment>\n        <p className=\"font-apercu text-5xl\">Dashboard</p>\n        <Typed\n            className=\"marquee text-teal-200\"\n            strings={[\n              `Welcome to your control center.`\n            ]}\n            typeSpeed={40} />\n        {authUser\n            ? <p className=\"pt-4 pb-2 text-green-200\">Logged in as {authUser.fullName}</p>\n            : ''}\n        <div className=\"flex flex-wrap -mx-4 my-10\">\n          <p>{job.shortName} {job.title} {job.speakers}</p>\n          <JobCreator\n              errors={errors}\n              job={job}\n              setShortName={setShortName}\n              setTitleAndSpeakers={setTitleAndSpeakers}\n          />\n          <JobList />\n        </div>\n      </Fragment>\n  );\n};\n\nexport default DashboardComponent;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAIA;AAGA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}