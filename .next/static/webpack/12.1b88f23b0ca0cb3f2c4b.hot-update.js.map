{"version":3,"file":"static/webpack/12.1b88f23b0ca0cb3f2c4b.hot-update.js","sources":["webpack:///./src/firebase/db.js"],"sourcesContent":["import { db } from './firebase';\n\n// User methods.\nexport const doCreateUser = (email, fullName, location, id, payment, token, username) =>\n    db.ref(`users/${id}`)\n        .set({\n          email,\n          fullName,\n          location,\n          payment,\n          token,\n          username,\n        });\n\nexport const checkDupeEmail = (email, cb) => {\n  db.ref('users')\n      .orderByChild('email')\n      .equalTo(email)\n      .on('value', snapshot => {\n        cb(!!snapshot.val());\n      });\n};\n\nexport const checkDupeUsername = (username, cb) => {\n  db.ref('users')\n      .orderByChild('username')\n      .equalTo(username)\n      .on('value', snapshot => {\n        cb(!!snapshot.val());\n      });\n};\n\nexport const getUser = (uid, cb) => {\n  db.ref(`users/${uid}`)\n      .once('value', snapshot => {\n        cb(snapshot.val());\n      })\n      .catch(err => {\n        cb(err);\n      })\n};\n\nexport const onceGetUsers = () =>\n    db.ref('users')\n        .once('value');\n\n// Job methods.\n\nexport const createJob = (job, user) => {\n db.ref('jobs')\n     .push({\n       completed: false,\n       shortName: job.shortName.trim().toLowerCase(),\n       speakers: job.speakers,\n       started: null,\n       createdTime: new Date(),\n       endTime: '',\n       title: job.title,\n       username: user,\n     })\n};\n\nexport const checkDupeJob = (shortName, user, cb) => {\n  db.ref('jobs')\n      .orderByChild('shortName')\n      .equalTo(shortName)\n      .once('value', snapshot => {\n        if (!snapshot.val()) {\n          cb();\n        } else if (snapshot.val().username === user) {\n          return new Error('That job by that user already exists.');\n        }\n      })\n      .catch(err => err);\n};\n\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}