{"version":3,"file":"static/webpack/2.c09f3390990d4321ae86.hot-update.js","sources":["webpack:///./src/components/DashboardPages/DashboardComponent.jsx","webpack:///./src/components/Widgets/JobCreator.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport JobCreator from '../../components/Widgets/JobCreator';\nimport JobList from '../../components/Widgets/JobList';\nimport Typed from 'react-typed';\nimport { db } from '../../firebase';\n\nconst DashboardComponent = ({user}) => {\n  console.log('dashboard props', user.uid);\n\n  let [authUser, setAuthUser] = useState({});\n  let [job, setJob] = useState({});\n  let [errors, setErrors] = useState([]);\n\n  const loadUser = user => {\n    setAuthUser(user);\n    console.log(user);\n  };\n\n  const setShortName = val => {\n    const re = /^[a-z0-9_\\-]+$/i;\n\n    val = val.trim().toLowerCase();\n\n    if (!val.match(re) && val !== '') {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n\n      setErrors([\n        'Your job shortname may only contain lower-case letters, numbers, hyphens, and underscores',\n      ]);\n    } else {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n\n      setErrors([]);\n    }\n  };\n\n  const setTitleAndSpeakers = (key, val) => {\n    if (val.contains('\\`')) {\n      alert('backtick');\n    }\n    setJob({\n      [key]: val,\n    });\n  };\n\n  useEffect(() => {\n    try {\n      db.getUser(user.uid, loadUser);\n    } catch (err) {\n      console.error('error', err);\n    }\n\n  }, []);\n\n  return (\n      <Fragment>\n        <p className=\"font-apercu text-5xl\">Dashboard</p>\n        <Typed\n            className=\"marquee text-teal-200\"\n            strings={[\n              `Welcome to your control center.`\n            ]}\n            typeSpeed={40} />\n        {authUser\n            ? <p className=\"pt-4 pb-2 text-green-200\">Logged in as {authUser.fullName}</p>\n            : ''}\n        <div className=\"flex flex-wrap -mx-4 my-10\">\n          <p>{job.shortName} {job.title} {job.speakers}</p>\n          <JobCreator\n              errors={errors}\n              job={job}\n              setShortName={setShortName}\n              setTitleAndSpeakers={setTitleAndSpeakers}\n          />\n          <JobList />\n        </div>\n      </Fragment>\n  );\n};\n\nexport default DashboardComponent;\n","import React from 'react';\n\nconst JobCreator = ({errors, job, setShortName, setTitleAndSpeakers}) => {\n  const errorMessages = errors.map((e, i) => (\n      <p className=\"text-sm text-red-400 mb-4\" key={i}>{e}</p>\n  ));\n\n  return (\n      <form className=\"w-full lg:w-1/2 px-4\">\n        <div className=\"bg-bg2 border-t border-b sm:rounded sm:border shadow\">\n          <div className=\"border-b\">\n            <div className=\"flex justify-between px-6 -mb-px\">\n              <h3 className=\"text-green-200 py-4 font-normal text-lg\">Start a Job</h3>\n            </div>\n          </div>\n          <div>\n            <div className=\"mb-4 px-8 pt-8\">\n              <label className=\"block text-grey-darker text-md text-bold mb-2\" htmlFor=\"shortname\">\n                Shortname (required)\n              </label>\n              <input autoFocus={true}\n                     autoComplete=\"off\"\n                     spellCheck={false}\n                     className={\n                       !!errors && errors.length > 0\n                         ? 'border-red-500 bg-red-100 shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-red-2100 text-bg font-mono text-md'\n                           : 'shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg font-mono text-md\"'\n                     }\n                     id=\"shortname\"\n                     name=\"shortname\"\n                     type=\"shortname\"\n                     placeholder=\"(i.e. coachella2019)\"\n                     value={job.shortName}\n                     onChange={e => setShortName(e.target.value)}\n                     required\n              />\n            </div>\n            <div className=\"mb-4 px-8\">\n              <label className=\"block text-grey-darker text-md text-bold mb-2\" htmlFor=\"title\">\n                Title (optional)\n              </label>\n              <input autoComplete=\"off\"\n                     spellCheck={false}\n                     className=\"shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg font-mono text-md\"\n                     id=\"title\"\n                     name=\"title\"\n                     type=\"title\"\n                     placeholder=\"(i.e. Spreadsheets IRL: The How and Why)\"\n              />\n            </div>\n            <div className=\"mb-4 px-8\">\n              <label className=\"block text-grey-darker text-md text-bold mb-2\" htmlFor=\"speakers\">\n                Speakers (optional)\n              </label>\n              <input autoComplete=\"off\"\n                     spellCheck={false}\n                     className=\"shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg font-mono text-md\"\n                     id=\"speakers\"\n                     name=\"speakers\"\n                     type=\"speakers\"\n                     placeholder=\"(i.e. Christopher Hagan, Stanley Sakai)\"\n                     value={job.speakers}\n                     onChange={e => setTitleAndSpeakers(e.target.name, e.target.value)}\n              />\n            </div>\n            <div className=\"text-center px-6 py-4\">\n              {\n                !!errors\n                    ? errorMessages\n                    : ''\n              }\n              <div className=\"py-8\">\n                <div className=\"mb-4\">\n                  <button type=\"submit\"\n                          className=\"bg-blue hover:bg-blue-dark text-white border border-blue-dark rounded px-6 py-4\">\n                    Create Job\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n\n  );\n};\n\nexport default JobCreator;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAIA;AAGA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;A","sourceRoot":""}