{"version":3,"file":"static/webpack/static/development/pages/view.js.21cb651bb0759a70aedf.hot-update.js","sources":["webpack:///./pages/view/index.jsx"],"sourcesContent":["import React, { Fragment, lazy } from 'react';\nimport { withRouter } from 'next/router';\nimport { animateScroll as scroll } from 'react-scroll';\nimport 'react-intersection-visible';\n\n// Components.\nimport Layout from '../../components/Layout';\n\n// Lazy-loaded.\nconst ScrollArrow = lazy(() => import('../../components/Button'));\nconst TextArea = lazy(() => import('../../components/LiveTranscript/TextArea'));\nconst LiveTranscript = lazy(() => import('../../components/LiveTranscript'));\n\nclass View extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolling: true,\n    };\n\n  }\n\n  componentDidMount() {\n    // On component load, begin auto-scrolling.\n    this.setScrolling();\n    const {router} = this.props;\n\n    console.log(router.query);\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  setScrolling = () => {\n    // Set the scrolling state to scrolling.\n    this.setState({scrolling: true});\n\n    // Begin auto-scrolling.\n    this.interval = setInterval(() => {\n      scroll.scrollToBottom({\n        delay: 0,\n        duration: 100,\n        offset: 30,\n        isDynamic: true,\n        smooth: true,\n      });\n    }, 500);\n  };\n\n  render() {\n    const {scrolling} = this.state;\n    const {router} = this.props;\n\n    return (\n        <Fragment>\n          <Layout>\n            <div className=\"px-8\n              py-8\n              text-5xl\"\n                 onTouchStart={() => {\n                   this.setState({scrolling: false});\n                   clearInterval(this.interval);\n                 }}>\n              <LiveTranscript\n                  user={router.query.user}\n                  job={router.query.job}\n                  render={(state) => (\n                      <TextArea {...state} />\n                  )}\n              />\n            </div>\n            {!scrolling\n                ? <ScrollArrow\n                    aria-label=\"Scroll to Bottom\"\n                    click={() => {\n                      this.setScrolling();\n                    }}\n                    filter=\"scroll-top-a\"\n                    href=\"scroll-top-b\"\n                    id=\"scroll-top-b\"\n                    path=\"M18 22l8 8 8-8\"\n                    title=\"Scroll to Bottom\" />\n                : null\n            }\n          </Layout>\n        </Fragment>\n    );\n  }\n}\n\nexport default withRouter(View);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAlCA;AACA;AADA;AAHA;AAOA;AACA;;;AACA;AACA;AACA;AAFA;AAKA;AAEA;;;AAEA;AACA;AACA;;;AAkBA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;AA7EA;AACA;AA+EA;;;;A","sourceRoot":""}