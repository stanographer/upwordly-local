{"version":3,"file":"static/webpack/static/development/pages/view.js.ca902045dad80059e26f.hot-update.js","sources":["webpack:///./pages/view/index.jsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { withRouter } from 'next/router';\nimport { animateScroll as scroll } from 'react-scroll';\nimport 'react-intersection-visible';\n\n// Components.\nimport { Nav } from '../../components/Controls';\nimport TextArea from '../../components/LiveTranscript/TextArea';\nimport LiveTranscript from '../../components/LiveTranscript';\nimport ScrollArrow from '../../components/Button';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nclass View extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolling: true,\n    };\n  }\n\n  interval = 0;\n\n  componentDidMount() {\n    // On component load, begin auto-scrolling.\n    const {router} = this.props;\n    this.startScrolling();\n\n    console.log(router.query);\n\n  }\n\n  componentWillUnmount() {\n    this.stopScrolling();\n  }\n\n  startScrolling = () => {\n    // Set the scrolling state to scrolling.\n    this.setState({scrolling: true});\n\n    // Begin auto-scrolling.\n    this.interval = setInterval(() => {\n      scroll.scrollToBottom({\n        delay: 0,\n        duration: 100,\n        offset: 30,\n        isDynamic: true,\n        smooth: true,\n      });\n    }, 500);\n  };\n\n  stopScrolling = () => {\n\n    // Stop auto-scrolling.\n    this.setState({scrolling: false});\n    clearInterval(this.interval);\n    console.log(this.interval);\n  };\n\n  render() {\n    const {scrolling} = this.state;\n    const {router} = this.props;\n\n    return (\n        <Fragment>\n          <div className={!scrolling ? 'visible sticky' : 'invisible sticky'}>\n            <Nav />\n          </div>\n          <div className=\"px-8\n              py-8\n              text-5xl\"\n               onTouchStart={() => this.stopScrolling()}\n               onClick={() => this.stopScrolling()}>\n            <LiveTranscript\n                user={router.query.user}\n                job={router.query.job}\n                render={(state) => (\n                    <TextArea {...state} />\n                )}\n            />\n          </div>\n          <ScrollArrow\n              aria-label=\"Scroll to Bottom\"\n              click={() => {\n                this.startScrolling();\n              }}\n              filter=\"scroll-top-a\"\n              href=\"scroll-top-b\"\n              id=\"scroll-top-b\"\n              path=\"M18 22l8 8 8-8\"\n              scrolling={scrolling}\n              title=\"Scroll to Bottom\" />\n        </Fragment>\n    );\n  }\n}\n\nexport default withRouter(View);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAwBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAtCA;AAyCA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AA3CA;AACA;AADA;AAHA;AAMA;AACA;;;AAGA;AACA;AADA;AAGA;AAEA;AAEA;;;AAEA;AACA;AACA;;;AA0BA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AAnFA;AACA;AAqFA;;;;A","sourceRoot":""}