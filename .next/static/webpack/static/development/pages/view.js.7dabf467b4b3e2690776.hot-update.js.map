{"version":3,"file":"static/webpack/static/development/pages/view.js.7dabf467b4b3e2690776.hot-update.js","sources":["webpack:///./components/Provider.js","webpack:///./pages/view/index.jsx"],"sourcesContent":["import '../style.css';\nimport '../fonts.css';\nimport Link from 'next/link';\nimport React from 'react';\nimport WidgetContext from '../context/widget-context';\n\nconst styles = {\n  bmBurgerButton: {\n    position: 'fixed',\n    width: '36px',\n    height: '30px',\n    right: '36px',\n    top: '36px'\n  },\n  bmBurgerBars: {\n    background: '#575b70'\n  },\n  bmBurgerBarsHover: {\n    background: '#a90000'\n  },\n  bmCrossButton: {\n    height: '40px',\n    width: '40px'\n  },\n  bmCross: {\n    background: '#bdc3c7'\n  },\n  bmMenuWrap: {\n    position: 'fixed',\n    height: '100%',\n  },\n  bmMenu: {\n    background: '#1a1b21',\n    padding: '2.5em 1.5em 0',\n    fontSize: '1.15em'\n  },\n  bmMorphShape: {\n    fill: '#1a1b21'\n  },\n  bmItemList: {\n    color: '#b8b7ad',\n    overflow: 'hidden',\n    height: 'unset',\n    padding: '0.8em',\n    width: '100%',\n  },\n  bmItem: {\n    display: 'inline-block',\n    fontSize: '2.5rem',\n    padding: '1rem 0'\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)'\n  }\n};\n\nclass AppProvider extends React.Component {\n  state = {\n    currentWidget: '',\n    widgetOpen: false,\n  };\n\n  openWidget = widget => {\n    this.setState({\n      currentWidget: widget,\n      widgetOpen: true,\n    })\n  };\n\n  closeWidget = () => {\n    this.setState({\n      widgetOpen: false,\n    })\n  };\n\n  getSettings = () => {\n    const settings = window.localStorage.getItem('upwordly') || this.INITIAL_SETTINGS;\n\n    this.setState({\n      settings: JSON.parse(settings),\n    });\n  };\n\n  setSettings = () => {\n    try {\n      window.localStorage.setItem('upwordly', JSON.stringify(this.state.settings));\n    } catch {\n      console.log('Error retrieving from localstorage.');\n    }\n  };\n\n  render() {\n    const {\n      currentWidget,\n      widgetOpen,\n    } = this.state;\n\n    return (\n        <WidgetContext.Provider\n            value={{\n              currentWidget,\n              widgetOpen,\n              openWidget: this.openWidget,\n              closeWidget: this.closeWidget,\n              getSettings: this.getSettings,\n              setSettings: this.setSettings,\n            }}>\n          {this.props.children}\n        </WidgetContext.Provider>\n    );\n  }\n}\n\nexport default AppProvider;","import React, { Fragment } from 'react';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { animateScroll as scroll } from 'react-scroll';\n\n// Components.\nimport TextArea from '../../components/LiveTranscript/TextArea';\nimport LiveTranscript from '../../components/LiveTranscript';\nimport Provider from '../../components/Provider';\nimport WidgetContext from '../../context/widget-context';\n\n// Dynamic imports.\nconst ScrollButton = dynamic(() => import('../../components/Controls')\n    .then(el => el.ScrollButton));\nconst Nav = dynamic(() => import('../../components/Controls')\n    .then(el => el.Nav));\nconst Modal = dynamic(() => import('react-modal'));\nconst ModalComponent = dynamic(() => import('../../components/Controls')\n    .then(el => el.Modal));\n\n\nconst modalStyles = {\n  content: {\n    backgroundColor: '#282c34',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 15px 30px 0 rgba(0, 0, 0, 0.11), 0 5px 15px 0 rgba(0, 0, 0, 0.08)',\n  },\n  overlay: {\n    backgroundColor: 'rgb(0, 0, 0, 0.3)',\n  }\n};\n\nclass View extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolling: true,\n      modalOpen: false,\n    };\n  }\n\n  interval = 0;\n\n  INITIAL_SETTINGS = {\n    bgColor: 'rgb(30,34,39)',\n    fgColor: '#fffce1',\n    fontFamily: 'Apercu',\n    fontSize: '3rem',\n    lineHeight: '1.2rem',\n    padding: '2rem 2rem 2rem 2rem',\n  };\n\n  componentDidMount() {\n\n    // On component load, begin auto-scrolling.\n    const {router} = this.props;\n    this.startScrolling();\n\n    console.log(router.query);\n  }\n\n  componentWillUnmount() {\n    this.stopScrolling();\n  }\n\n  startScrolling = () => {\n    // Set the scrolling state to scrolling.\n    this.setState({scrolling: true});\n\n    // Begin auto-scrolling.\n    this.interval = setInterval(() => {\n      scroll.scrollToBottom({\n        delay: 0,\n        duration: 100,\n        offset: 30,\n        isDynamic: true,\n        smooth: true,\n      });\n    }, 500);\n  };\n\n  stopScrolling = () => {\n\n    // Stop auto-scrolling.\n    this.setState({scrolling: false});\n    clearInterval(this.interval);\n  };\n\n  openModal = () => {\n    this.setState({modalOpen: true});\n  };\n\n  closeModal = () => {\n    this.setState({modalOpen: false});\n  };\n\n  render() {\n    const {scrolling} = this.state;\n    const {router} = this.props;\n\n    return (\n        <Provider>\n          <WidgetContext.Consumer>\n            {context => (\n                <Fragment>\n                  <Modal\n                    isOpen={context.widgetOpen}\n                    onRequestClose={context.closeWidget}\n                    contentLabel=\"Example Modal\"\n                    style={modalStyles}\n                    ariaHideApp={false}\n                >\n                  <ModalComponent title={context.currentWidget} />\n                </Modal>\n                  <div className={!scrolling ? 'visible sticky' : 'invisible sticky'}>\n                    <Nav openModal={this.openModal} closeModal={this.closeModal} />\n                  </div>\n                  {/*px-8 py-8 text-2xl md:text-5xl*/}\n                  <div\n                       onTouchStart={() => this.stopScrolling()}\n                       onClick={() => this.stopScrolling()}>\n                    <LiveTranscript\n                        user={router.query.user}\n                        job={router.query.job}\n                        render={(state) => (\n                            <TextArea {...state} />\n                        )}\n                    />\n                  </div>\n                  <ScrollButton\n                      aria-label=\"Scroll to Bottom\"\n                      click={() => {\n                        this.startScrolling();\n                      }}\n                      filter=\"scroll-top-a\"\n                      href=\"scroll-top-b\"\n                      id=\"scroll-top-b\"\n                      path=\"M18 22l8 8 8-8\"\n                      scrolling={scrolling}\n                      title=\"Scroll to Bottom\" />\n                </Fragment>\n            )}\n          </WidgetContext.Consumer>\n        </Provider>\n    );\n  }\n}\n\nexport default withRouter(View);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AA7CA;AACA;AAiDA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AAtDA;AACA;AAwDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAXA;AACA;AAeA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAZA;AAkCA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAhDA;AAmDA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAvDA;AAyDA;AAAA;AAAA;AACA;AACA;AA3DA;AA6DA;AAAA;AAAA;AACA;AACA;AA5DA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AAYA;AAEA;AAFA;AAIA;AAEA;AACA;;;AAEA;AACA;AACA;;;AAiCA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AA0CA;;;;AAlHA;AACA;AAoHA;;;;A","sourceRoot":""}