{"version":3,"file":"static/webpack/static/development/pages/view.js.d9cdf29d157f3653872f.hot-update.js","sources":["webpack:///./components/LiveTranscript/TextArea.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Binding from './react-binding';\nimport PropTypes from 'prop-types';\n\nfunction TextArea(props) {\n  const {\n    doc,\n    flag,\n  } = props;\n\n\n  let [text, setText] = useState('');\n  let binding;\n\n  useEffect(() => {\n    console.log('doc in textarea', doc);\n    doc.subscribe(err => {\n      if (err) {\n        setText('There was a connection error: ' + err);\n      }\n    }, []);\n\n    // Load document and bind it to local snapshot.\n    doc.on('load', () => {\n      binding = new Binding(doc.data, flag);\n      setText(binding.snapshot);\n    });\n\n    // Apply remote ops to local snapshot.\n    doc.on('op', op => {\n      setTimeout(() => {\n        setText(binding.applyOp(op));\n      }, 0);\n    });\n\n    // Destroy listeners.\n    return () => {\n      doc.unsubscribe();\n      doc.destroy();\n      binding = null;\n    };\n  }, []);\n\n  return (\n      <div>\n        {text || 'Loading...'}\n      </div>\n  );\n}\n\nTextArea.propTypes = {\n  doc: PropTypes.object,\n  flag: PropTypes.string,\n};\n\nexport default TextArea;"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}