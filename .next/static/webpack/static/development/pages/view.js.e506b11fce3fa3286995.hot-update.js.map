{"version":3,"file":"static/webpack/static/development/pages/view.js.e506b11fce3fa3286995.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/view/index.jsx"],"sourcesContent":["import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React, { Fragment } from 'react';\nimport { withRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport LiveTranscript from '../../components/LiveTranscript';\nimport { animateScroll as scroll } from 'react-scroll';\nimport 'react-intersection-visible';\n\nimport ScrollArrow from '../../components/Button';\nimport ShareDBBinding from '../../components/LiveTranscriptCopy/ShareDBBinding';\nimport TextArea from '../../components/LiveTranscript/TextArea';\n\nclass View extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolling: true,\n    };\n\n  }\n\n  componentDidMount() {\n    // On component load, begin auto-scrolling.\n    this.setScrolling();\n    const {router} = this.props;\n\n    console.log(router.query);\n\n  }\n\n  setScrolling = () => {\n    // Set the scrolling state to scrolling.\n    this.setState({scrolling: true});\n\n    // Begin auto-scrolling.\n    this.interval = setInterval(() => {\n      scroll.scrollToBottom({\n        delay: 0,\n        duration: 100,\n        offset: 30,\n        isDynamic: true,\n        smooth: true,\n      });\n    }, 500);\n  };\n\n  render() {\n    const {scrolling} = this.state;\n    const {router} = this.props;\n\n    return (\n        <Fragment>\n          <Layout>\n            <div className=\"px-8\n              py-8\n              text-5xl\"\n                 onTouchStart={() => {\n                   this.setState({\n                     scrolling: false\n                   });\n                   clearInterval(this.interval);\n                 }}>\n              <LiveTranscript\n                  user={router.query.user}\n                  job={router.query.job}\n                  render={(state) => (\n                      <TextArea {...state} />\n                  )}\n              />\n            </div>\n            {!scrolling\n                ? <ScrollArrow\n                    aria-label=\"Scroll to Bottom\"\n                    click={() => {\n                      this.setScrolling();\n                    }}\n                    filter=\"scroll-top-a\"\n                    href=\"scroll-top-b\"\n                    id=\"scroll-top-b\"\n                    path=\"M18 22l8 8 8-8\"\n                    title=\"Scroll to Bottom\" />\n                : null\n            }\n          </Layout>\n        </Fragment>\n    );\n  }\n}\n\nexport default withRouter(View);"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AA9BA;AACA;AADA;AAHA;AAOA;AACA;;;AACA;AACA;AACA;AAFA;AAKA;AAEA;;;AAkBA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;AA3EA;AACA;AA6EA;;;;A","sourceRoot":""}