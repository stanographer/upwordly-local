{"version":3,"file":"static/webpack/static/development/pages/view.js.889b14aaf3b60969dc25.hot-update.js","sources":["webpack:///./components/Toasts/index.js"],"sourcesContent":["import React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faExclamation,\n  faRunning,\n  faWifi,\n} from '@fortawesome/free-solid-svg-icons';\n\n// Toast contents.\n\nconst Fetching = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faRunning}\n        />\n        <strong>Fetching job!</strong>\n      </div>\n  );\n};\n\nconst Loaded = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faCheck}\n        />\n        <strong>Live transcription is now active!</strong>\n      </div>\n  );\n};\n\nconst Disconnected = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faExclamation}\n        />\n        <br />\n        <em>Attempting to reconnect...</em>\n        <br />\n        <br />\n        You can also try refreshing the page.\n      </div>\n  );\n};\n\nconst Reconnected = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faWifi}\n        />\n        <br />\n        <strong>Connection Restored.</strong>\n        <br />\n        <em>Whew! ðŸ¦„</em>\n\n      </div>\n  );\n};\n\n// Toast components.\n\nlet toastId = null;\n\nconst FetchingToast = () => toastId = toast(<Fetching />, {\n  autoClose: false,\n  position: 'bottom-right',\n  type: toast.TYPE.WARNING,\n  closeOnClick: true,\n  draggable: true\n});\n\nconst LoadedToast = () => {\n  toast.dismiss(toastId);\n  toast(<Loaded />, {\n    autoClose: 3000,\n    type: toast.TYPE.SUCCESS,\n    pauseOnFocusLoss: false,\n    position: 'bottom-right',\n    closeOnClick: true,\n    draggable: false,\n    className: 'rotateY animated'\n  });\n};\n\nconst DisconnectedToast = () => {\n  if (toast.isActive(toastId)) return;\n  toastId = toast(<Disconnected />, {\n    autoClose: false,\n    position: 'top-center',\n    type: toast.TYPE.ERROR,\n    closeOnClick: true,\n    draggable: true,\n    toastId: toastId\n  });\n};\n\nconst ReconnectedToast = () => {\n  if (!toast.isActive(this.toastId)) {\n    toastId = toast(<Reconnected />, {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n  toast.dismiss(toastId);\n};\n\nexport {\n  DisconnectedToast,\n  FetchingToast,\n  LoadedToast,\n  ReconnectedToast,\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}