{"version":3,"file":"static/webpack/static/development/pages/view.js.57a13fc6cb1fcb5dfc29.hot-update.js","sources":["webpack:///./pages/view/index.jsx"],"sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { animateScroll as scroll } from 'react-scroll';\nimport 'react-intersection-visible';\n\n// Components.\nimport TextArea from '../../components/LiveTranscript/TextArea';\nimport LiveTranscript from '../../components/LiveTranscript';\nimport Provider from '../../components/Provider';\nimport WidgetContext from '../../context/widget-context';\n\n\n// Dynamic imports.\nconst ScrollButton = dynamic(() => import('../../components/Controls')\n    .then(el => el.ScrollButton));\nconst Nav = dynamic(() => import('../../components/Controls')\n    .then(el => el.Nav));\nconst Modal = dynamic(() => import('react-modal'));\nconst ModalComponent = dynamic(() => import('../../components/Controls')\n    .then(el => el.Modal));\n\n\nconst modalStyles = {\n  content: {\n    backgroundColor: '#282c34',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 15px 30px 0 rgba(0, 0, 0, 0.11), 0 5px 15px 0 rgba(0, 0, 0, 0.08)',\n  },\n  overlay: {\n    backgroundColor: 'rgb(0, 0, 0, 0.3)',\n  }\n};\n\nclass View extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolling: true,\n      modalOpen: false,\n    };\n  }\n\n  interval = 0;\n\n  componentDidMount() {\n    // On component load, begin auto-scrolling.\n    const {router} = this.props;\n    this.startScrolling();\n\n    console.log(router.query);\n\n  }\n\n  componentWillUnmount() {\n    this.stopScrolling();\n  }\n\n  startScrolling = () => {\n    // Set the scrolling state to scrolling.\n    this.setState({scrolling: true});\n\n    // Begin auto-scrolling.\n    this.interval = setInterval(() => {\n      scroll.scrollToBottom({\n        delay: 0,\n        duration: 100,\n        offset: 30,\n        isDynamic: true,\n        smooth: true,\n      });\n    }, 500);\n  };\n\n  stopScrolling = () => {\n\n    // Stop auto-scrolling.\n    this.setState({scrolling: false});\n    clearInterval(this.interval);\n  };\n\n  openModal = () => {\n    this.setState({modalOpen: true});\n  };\n\n  closeModal = () => {\n    this.setState({modalOpen: false});\n  };\n\n  render() {\n    const {scrolling} = this.state;\n    const {router} = this.props;\n\n    return (\n        <Provider>\n          <WidgetContext.Consumer>\n            <Modal\n                isOpen={this.state.modalOpen}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n                style={modalStyles}\n            >\n              <ModalComponent />\n            </Modal>\n            <div className={!scrolling ? 'visible sticky' : 'invisible sticky'}>\n              <Nav openModal={this.openModal} closeModal={this.closeModal} />\n            </div>\n            <div className=\"\n              px-8\n              py-8\n              text-2xl\n              md:text-5xl\"\n                 onTouchStart={() => this.stopScrolling()}\n                 onClick={() => this.stopScrolling()}>\n              <LiveTranscript\n                  user={router.query.user}\n                  job={router.query.job}\n                  render={(state) => (\n                      <TextArea {...state} />\n                  )}\n              />\n            </div>\n            <ScrollButton\n                aria-label=\"Scroll to Bottom\"\n                click={() => {\n                  this.startScrolling();\n                }}\n                filter=\"scroll-top-a\"\n                href=\"scroll-top-b\"\n                id=\"scroll-top-b\"\n                path=\"M18 22l8 8 8-8\"\n                scrolling={scrolling}\n                title=\"Scroll to Bottom\" />\n          </WidgetContext.Consumer>\n        </Provider>\n    );\n  }\n}\n\nexport default withRouter(View);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAXA;AACA;AAeA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAyBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAvCA;AA0CA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA9CA;AAgDA;AAAA;AAAA;AACA;AACA;AAlDA;AAoDA;AAAA;AAAA;AACA;AACA;AAnDA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AAGA;AACA;AADA;AAGA;AAEA;AAEA;;;AAEA;AACA;AACA;;;AAiCA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AAvGA;AACA;AAyGA;;;;A","sourceRoot":""}