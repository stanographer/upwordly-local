{"version":3,"file":"static/webpack/static/development/pages/view.js.fec228c3a79bb6ffbc91.hot-update.js","sources":["webpack:///./components/Provider.js","webpack:///./pages/view/index.jsx"],"sourcesContent":["import '../style.css';\nimport '../fonts.css';\nimport Link from 'next/link';\nimport React from 'react';\n\nconst styles = {\n  bmBurgerButton: {\n    position: 'fixed',\n    width: '36px',\n    height: '30px',\n    right: '36px',\n    top: '36px'\n  },\n  bmBurgerBars: {\n    background: '#575b70'\n  },\n  bmBurgerBarsHover: {\n    background: '#a90000'\n  },\n  bmCrossButton: {\n    height: '40px',\n    width: '40px'\n  },\n  bmCross: {\n    background: '#bdc3c7'\n  },\n  bmMenuWrap: {\n    position: 'fixed',\n    height: '100%',\n  },\n  bmMenu: {\n    background: '#1a1b21',\n    padding: '2.5em 1.5em 0',\n    fontSize: '1.15em'\n  },\n  bmMorphShape: {\n    fill: '#1a1b21'\n  },\n  bmItemList: {\n    color: '#b8b7ad',\n    overflow: 'hidden',\n    height: 'unset',\n    padding: '0.8em',\n    width: '100%',\n  },\n  bmItem: {\n    display: 'inline-block',\n    fontSize: '2.5rem',\n    padding: '1rem 0'\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)'\n  }\n};\n\nconst AppContext = React.createContext();\n\nclass AppProvider extends React.Component {\n  state = {\n    currentWidget: '',\n    widgetOpen: false,\n  };\n\n  render() {\n    return (\n        <AppContext.Provider value={this.state}>\n          {this.props.children}\n        </AppContext.Provider>\n    );\n  }\n}\n\nconst Provider = props => (\n    <AppProvider>\n      {props.children}\n    </AppProvider>\n);\n\nexport const AppContextConsumer = AppContext.Consumer;","import React from 'react';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { animateScroll as scroll } from 'react-scroll';\nimport 'react-intersection-visible';\n\n// Components.\nimport TextArea from '../../components/LiveTranscript/TextArea';\nimport LiveTranscript from '../../components/LiveTranscript';\nimport { AppContextConsumer } from '../../components/Provider';\n\n\n// Dynamic imports.\nconst ScrollButton = dynamic(() => import('../../components/Controls')\n    .then(el => el.ScrollButton));\nconst Nav = dynamic(() => import('../../components/Controls')\n    .then(el => el.Nav));\nconst Modal = dynamic(() => import('react-modal'));\nconst ModalComponent = dynamic(() => import('../../components/Controls')\n    .then(el => el.Modal));\n\n\nconst modalStyles = {\n  content: {\n    backgroundColor: '#282c34',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 15px 30px 0 rgba(0, 0, 0, 0.11), 0 5px 15px 0 rgba(0, 0, 0, 0.08)',\n  },\n  overlay: {\n    backgroundColor: 'rgb(0, 0, 0, 0.3)',\n  }\n};\n\nclass View extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolling: true,\n      modalOpen: false,\n    };\n  }\n\n  interval = 0;\n\n  componentDidMount() {\n    // On component load, begin auto-scrolling.\n    const {router} = this.props;\n    this.startScrolling();\n\n    console.log(router.query);\n\n  }\n\n  componentWillUnmount() {\n    this.stopScrolling();\n  }\n\n  startScrolling = () => {\n    // Set the scrolling state to scrolling.\n    this.setState({scrolling: true});\n\n    // Begin auto-scrolling.\n    this.interval = setInterval(() => {\n      scroll.scrollToBottom({\n        delay: 0,\n        duration: 100,\n        offset: 30,\n        isDynamic: true,\n        smooth: true,\n      });\n    }, 500);\n  };\n\n  stopScrolling = () => {\n\n    // Stop auto-scrolling.\n    this.setState({scrolling: false});\n    clearInterval(this.interval);\n  };\n\n  openModal = () => {\n    this.setState({modalOpen: true});\n  };\n\n  closeModal = () => {\n    this.setState({modalOpen: false});\n  };\n\n  render() {\n    const {scrolling} = this.state;\n    const {router} = this.props;\n\n    return (\n        <AppContextConsumer>\n          <Modal\n              isOpen={this.state.modalOpen}\n              onRequestClose={this.closeModal}\n              contentLabel=\"Example Modal\"\n              style={modalStyles}\n          >\n            <ModalComponent />\n          </Modal>\n          <div className={!scrolling ? 'visible sticky' : 'invisible sticky'}>\n            <Nav openModal={this.openModal} closeModal={this.closeModal} />\n          </div>\n          <div className=\"\n              px-8\n              py-8\n              text-2xl\n              md:text-5xl\"\n               onTouchStart={() => this.stopScrolling()}\n               onClick={() => this.stopScrolling()}>\n            <LiveTranscript\n                user={router.query.user}\n                job={router.query.job}\n                render={(state) => (\n                    <TextArea {...state} />\n                )}\n            />\n          </div>\n          <ScrollButton\n              aria-label=\"Scroll to Bottom\"\n              click={() => {\n                this.startScrolling();\n              }}\n              filter=\"scroll-top-a\"\n              href=\"scroll-top-b\"\n              id=\"scroll-top-b\"\n              path=\"M18 22l8 8 8-8\"\n              scrolling={scrolling}\n              title=\"Scroll to Bottom\" />\n        </AppContextConsumer>\n    );\n  }\n}\n\nexport default withRouter(View);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AA7CA;AAkDA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAZA;AACA;AAcA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AADA;AAXA;AACA;AAeA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAyBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAvCA;AA0CA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA9CA;AAgDA;AAAA;AAAA;AACA;AACA;AAlDA;AAoDA;AAAA;AAAA;AACA;AACA;AAnDA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AAGA;AACA;AADA;AAGA;AAEA;AAEA;;;AAEA;AACA;AACA;;;AAiCA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AArGA;AACA;AAuGA;;;;A","sourceRoot":""}