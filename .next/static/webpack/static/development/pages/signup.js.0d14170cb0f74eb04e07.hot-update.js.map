{"version":3,"file":"static/webpack/static/development/pages/signup.js.0d14170cb0f74eb04e07.hot-update.js","sources":["webpack:///./pages/signup/index.jsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport Provider from '../../components/Provider';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport ValidField from './ValidField';\n\nconst NavLogo = dynamic(() => import('../../components/Logos/NavLogo'));\nconst Typed = dynamic(() => import('react-typed'));\n\n// Sign-up components.\nconst EmailComponent = dynamic(() => import('./Email'));\nconst TokenComponent = dynamic(() => import('./Token'));\nconst UserInfoComponent = dynamic(() => import('./UserInfo'));\nconst ValidFieldComponent = dynamic(() => import('./ValidField'));\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      step: 0,\n      token: '',\n      tokenValid: false,\n    };\n  }\n\n  handleInput = e => {\n\n    // Matches the token to the one in the environment variable.\n    // Trims and lower-cases. If there's a match, the tokenValid\n    // flag is switched to true.\n    if (\n        e.target.name === 'token' &&\n        e.target.value.trim().toLowerCase() === process.env.REGISTRATION_TOKEN.trim().toLowerCase()\n    ) {\n      this.setState({\n        [e.target.name]: e.target.value.trim().toLowerCase(),\n        tokenValid: true,\n      });\n    } else if (e.target.name === 'email') {\n      \n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  validateEmail = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      return re.test(String(email).trim().toLowerCase());\n    };\n\n  verifyInputsAndContinue = () => {\n    const {tokenValid} = this.state;\n\n    if (tokenValid) {\n      this.setState({\n        step: this.state.step += 1,\n      });\n    }\n  };\n\n  render() {\n    const {\n      email,\n      step,\n      token,\n      tokenValid,\n    } = this.state;\n\n    const stage = () => {\n      switch (step) {\n        case 0:\n          return <TokenComponent\n              tokenValue={token}\n              handleInput={this.handleInput}\n              nextStep={this.verifyInputsAndContinue}\n              tokenValid={tokenValid}\n          />;\n        case 1:\n          return (\n              <Fragment>\n                <ValidFieldComponent\n                    message={`Yay! Your registration token \"${token}\" is valid.`}\n                />\n                <EmailComponent\n                    emailValue={email}\n                    handleInput={this.handleInput}\n                    nextStep={this.verifyInputsAndContinue}\n                    tokenValid={tokenValid}\n                />\n              </Fragment>\n          );\n        case 2:\n          return <UserInfoComponent />;\n        default:\n          break;\n      }\n    };\n\n    return (\n        <Provider>\n          <Head>\n            <title>Create an Upword.ly account</title>\n          </Head>\n          <div className=\"container mx-auto h-full flex flex-1 justify-center items-center\">\n            <div className=\"w-full max-w-sm mt-20\">\n              <NavLogo center={true} />\n              <div className=\"font-sans mb-10 mt-2 text-center justify-center\">\n                <Typed\n                    className=\"marquee\"\n                    strings={[\n                      'Welcome to Upword.ly.',\n                      'Let\\'s create you an account.'\n                    ]}\n                    typeSpeed={40} />\n              </div>\n\n              {stage()}\n\n              <p className=\"text-center text-grey text-xs mt-10\">\n                Â©2019 Upword.ly. All rights reserved.\n              </p>\n            </div>\n          </div>\n        </Provider>\n    );\n  }\n}\n\nexport default SignUp;\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAIA;AAGA;AAGA;AACA;AACA;AAhCA;AAkCA;AAEA;AACA;AACA;AAtCA;AAuCA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AA7CA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AAuCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAnHA;AACA;AAqHA;;;;A","sourceRoot":""}