{"version":3,"file":"static/webpack/static/development/pages/view.js.db5b1aa6a6104e45abf6.hot-update.js","sources":["webpack:///./components/Controls/Nav.jsx","webpack:///./components/Controls/index.js","webpack:///./components/LiveTranscript/index.jsx"],"sourcesContent":["import React from 'react';\n\nconst NavBar = () => {\n  return (\n      <div>\n        <nav className=\"relative select-none bg-grey lg:flex lg:items-stretch w-full\">\n          <div className=\"flex flex-no-shrink items-stretch h-12\">\n            <a href=\"#\"\n               className=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-white no-underline flex items-center hover:bg-grey-dark\">Tailwind</a>\n            <a href=\"#\"\n               className=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-white no-underline flex items-center hover:bg-grey-dark\">Css</a>\n            <button className=\"block lg:hidden cursor-pointer ml-auto relative w-12 h-12 p-4\">\n              <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n              </svg>\n              <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path\n                    d=\"M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z\" />\n              </svg>\n            </button>\n          </div>\n          <div className=\"lg:flex lg:items-stretch lg:flex-no-shrink lg:flex-grow\">\n            <div className=\"lg:flex lg:items-stretch lg:justify-end ml-auto\">\n              <a href=\"#\"\n                 className=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-white no-underline flex items-center hover:bg-grey-dark\">Item\n                                                                                                                                                        1</a>\n              <a href=\"#\"\n                 className=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-white no-underline flex items-center hover:bg-grey-dark\">Item\n                                                                                                                                                        2</a>\n              <a href=\"#\"\n                 className=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-white no-underline flex items-center hover:bg-grey-dark\">Item\n                                                                                                                                                        3</a>\n            </div>\n          </div>\n        </nav>\n      </div>\n  );\n};\n\nexport default  NavBar;\n","import ButtonGroup from '../../components/controls/ButtonGroup';\nimport Nav from '../../components/Controls/Nav';\n\nexport {\n  ButtonGroup,\n  Nav,\n};","import React, { Component, Fragment } from 'react';\nimport ShareDB from '@teamwork/sharedb/lib/client';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\nimport WS from 'isomorphic-ws';\nimport otText from 'ot-text';\n\n// Components.\nimport ButtonGroup from '../../components/Controls';\nimport Nav from '../../components/Controls'\n\nclass LiveTranscript extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      connection: {},\n      doc: {},\n      flag: 'â‰ˆ',\n      loading: true,\n    };\n  }\n\n  fetchDoc = (host) => {\n    const server = {\n      host: process.env.REACT_APP_ENV === 'production' ? 'upword.ly/ws' : host,\n      port: process.env.REACT_APP_ENV === 'production' ? '' : ':9090',\n      protocol: process.env.REACT_APP_ENV === 'production' ? 'wss://' : 'ws://',\n      getAddress: function () {\n        console.log(this.protocol + this.host + this.port);\n        return this.protocol + this.host + this.port;\n      },\n    };\n\n    const socket = new ReconnectingWebSocket(server.getAddress(), [], {\n      WebSocket: WS,\n      automaticOpen: true,\n      maxReconnectionDelay: 2000,\n      reconnectInterval: 2000,\n      maxReconnectInterval: 3000,\n      timeoutInterval: 2000,\n      maxRetries: Infinity,\n    });\n\n    ShareDB.types.register(otText.type);\n\n    const connection = new ShareDB.Connection(socket);\n\n    this.setState({\n      connection,\n      doc: connection.get(this.props.user, this.props.job),\n      loading: false,\n    });\n  };\n\n  componentDidMount() {\n    this.fetchDoc(window.location.hostname);\n  }\n\n  render() {\n    const {loading} = this.state;\n\n    return (\n        <Fragment>\n          <ButtonGroup />\n          {\n            !loading\n                ? this.props.render(this.state)\n                : null\n          }\n        </Fragment>\n    );\n  }\n}\n\nexport default LiveTranscript;"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAvCA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AAiCA;AACA;AACA;;;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA7DA;AACA;AA+DA;;;;;;;;A","sourceRoot":""}