{"version":3,"file":"static/webpack/12.d49bdfa561a986471c8e.hot-update.js","sources":["webpack:///./src/components/DashboardPages/DashboardComponent.jsx","webpack:///./src/components/Widgets/JobList.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport JobCreator from '../../components/Widgets/JobCreator';\nimport JobList from '../../components/Widgets/JobList';\nimport Typed from 'react-typed';\nimport { getUser, getAllJobsByUser } from '../../firebase/db';\n\nconst DashboardComponent = ({user}) => {\n  console.log('dashboard props', user.uid);\n\n  let [authUser, setAuthUser] = useState({});\n  let [jobList, setJobList] = useState({});\n  let [job, setJob] = useState({});\n  let [errors, setErrors] = useState([]);\n\n  const loadUser = user => {\n    setAuthUser(user);\n    console.log('username', user.username);\n    getAllJobsByUser(user.username, jobs => setJobList(jobs));\n  };\n\n  const setShortName = val => {\n    const re = /^[a-z0-9_\\-]+$/i;\n\n    val = val.trim().toLowerCase();\n\n    if (!val.match(re) && val !== '') {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n\n      setErrors([\n        'Your job shortname may only contain lower-case letters, numbers, hyphens, and underscores.',\n      ]);\n    } else if (val.length > 100) {\n      setErrors([\n        'Your job shortname may not exceed 100 characters in length.',\n      ]);\n    } else {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n\n      setErrors([]);\n    }\n  };\n\n  const setTitleAndSpeakers = (key, val) => {\n    // Replaces backticks with single quotes.\n    if (val.includes('`')) {\n      val = val.replace('`', '\\'');\n    }\n\n    // Escapes curly braces.\n    if (val.includes('{')) {\n      val = val.replace('{', '\\{');\n    }\n\n    if (val.includes('}')) {\n      val = val.replace('{', '\\}');\n    }\n\n    setJob({\n      ...job,\n      [key]: val,\n    });\n  };\n\n  useEffect(async () => {\n      try {\n        await getUser(user.uid, loadUser);\n      } catch (err) {\n        console.error('error', err);\n      }\n  }, []);\n\n  return (\n      <Fragment>\n        <p className=\"font-apercu text-5xl\">Dashboard</p>\n        <Typed\n            className=\"marquee text-teal-200\"\n            strings={[\n              `Welcome to your control center.`\n            ]}\n            typeSpeed={40} />\n        {authUser\n            ? <p className=\"pt-4 pb-2 text-green-200\">Logged in as {authUser.fullName}</p>\n            : ''}\n        <div className=\"flex flex-wrap -mx-4 my-10\">\n          <JobCreator\n              authUser={authUser}\n              errors={errors}\n              job={job}\n              setShortName={setShortName}\n              setTitleAndSpeakers={setTitleAndSpeakers}\n              uid={user.uid}\n          />\n          <JobList\n            jobList={jobList}\n          />\n        </div>\n      </Fragment>\n  );\n};\n\nexport default DashboardComponent;\n","import React, { useEffect, useState } from 'react';\nimport JobItem from './JobItem';\n\nconst JobList = ({jobList}) => {\n  console.log('jobList', jobList);\n  return (\n      <div className=\"w-full mb-6 lg:mb-0 lg:w-1/2 px-4 flex flex-col\">\n        <div\n            className=\"flex-grow flex flex-col bg-bg2 border-t border-b sm:rounded sm:border shadow overflow-hidden\">\n          <div className=\"border-b\">\n            <div className=\"flex justify-between px-6 -mb-px\">\n              <h3 className=\"text-red-200 py-4 font-normal text-lg\">Your Jobs</h3>\n              <div className=\"flex\">\n                <button type=\"button\"\n                        className=\"appearance-none py-4 text-blue-dark border-b border-blue-dark mr-3\">\n                  List\n                </button>\n                <button type=\"button\"\n                        className=\"appearance-none py-4 text-grey-dark border-b border-transparent hover:border-grey-dark\">\n                  Chart\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex-grow flex px-6 py-6 text-grey-darker items-center border-b -mx-4\">\n            {/*{jobsList.map((e, i) => <JobItem key={i} job={jobsList[e]} />)}*/}\n          </div>\n          <div className=\"px-6 py-4\">\n            <div className=\"text-center text-grey\">\n              Total Balance &asymp; CA$21.28\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default JobList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAIA;AAGA;AACA;AAGA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}