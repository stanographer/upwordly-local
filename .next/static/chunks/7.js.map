{"version":3,"file":"static/chunks/7.js","sources":["webpack:///./components/Modal/Share.jsx","webpack:///./utils/fetchTranscript.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport WidgetContext from '../../context/widget-context';\nimport {\n  faFileDownload,\n  faRetweet\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fetchTranscript } from '../../utils/fetchTranscript';\n\nconst Share = ({job, user}) => {\n  return (\n      <WidgetContext.Consumer>\n        {context => (\n            <Fragment>\n              <form className=\"w-full max-w-sm\">\n                <div>\n                  <button\n                      className=\"border rounded text-teal-200 bg-bg2 border-bg2 hover:border-transparent hover:text-bg hover:bg-teal-200 hover:border-teal-200 text-lg mt-2 mx-0 px-3 py-2 font-apercu\"\n                      type=\"button\"\n                  onClick={() => fetchTranscript(job, user)}>\n                    <FontAwesomeIcon icon={faFileDownload} className=\"pr-2\" />\n                    Save Transcription as .txt\n                  </button>\n                </div>\n                <div className=\"mt-4\">\n                  <button\n                      className=\"border rounded text-teal-200 bg-bg2 border-bg2 hover:border-transparent hover:text-bg hover:bg-teal-200 hover:border-teal-200 text-lg mt-2 mx-0 px-3 py-2 font-apercu\"\n                      type=\"button\">\n                    <FontAwesomeIcon icon={faRetweet} className=\"pr-2\" />\n                    Tweet Link\n                  </button>\n                </div>\n              </form>\n            </Fragment>\n        )}\n      </WidgetContext.Consumer>\n  );\n};\n\nexport default Share;","// Downloads transcripts to txt.\n\nfunction fetchTranscript(job, user) {\n  const fileName = `${ job } (${ user }).txt`;\n  const node = document.querySelector('.transcript');\n  const transcript = node.textContent;\n  const transcriptBlob = new Blob([transcript], { type: 'text/plain' });\n\n  // Create a hidden link.\n  const downloadLink = document.createElement('a');\n\n  // Set the download file name.\n  downloadLink.download = fileName;\n\n  // Text can be anything because it's not shown to the user.\n  downloadLink.innerHTML = 'My Hidden Download Link';\n\n  // We want to remove the download link once we're done.\n  downloadLink.onclick = e => document.body.removeChild(e.target);\n\n  // Set the URL to the transcript blob.\n  downloadLink.href = window.URL.createObjectURL(transcriptBlob);\n\n  // Make sure download link is never shown to user.\n  downloadLink.style.display = 'none';\n\n  // Append it to the document.\n  document.body.appendChild(downloadLink);\n\n  // \"Click\" on the download link.\n  downloadLink.click();\n\n  return transcript;\n}\n\nexport { fetchTranscript };"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAyBA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}