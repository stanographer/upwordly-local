{"version":3,"file":"9.js","sources":["webpack:///./components/Modal/Color.jsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport WidgetContext from '../../context/widget-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\n\nconst ModalCloseButton = dynamic(() => import('../Controls')\n    .then(el => el.ModalCloseButton))\n;\nconst ModalSaveButton = dynamic(() => import('../Controls')\n    .then(el => el.ModalSaveButton));\n\n// Dynamically-loaded components.\nconst SketchPicker = dynamic(() => import('react-color')\n    .then(el => el.SketchPicker));\n\nconst Color = () => {\n  let [bgFg, setBgFg] = useState('fg');\n\n  return (\n      <WidgetContext.Consumer>\n        {context => (\n            <Fragment>\n              <form className=\"w-full max-w-sm\">\n                <ul className=\"flex list-style-none mp-start-none\">\n                  <li className=\"flex-1 mx-2\">\n                    <a className={bgFg === 'fg'\n                        ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg'\n                        : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4'}\n                       href=\"#\"\n                       onClick={e => {\n                         e.preventDefault();\n                         setBgFg('fg');\n                       }}>Foreground</a>\n                  </li>\n                  <li className=\"flex-1 mx-2\">\n                    <a className={bgFg === 'bg'\n                        ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg'\n                        : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4'}\n                       href=\"#\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setBgFg('bg');\n                    }}>Background</a>\n                  </li>\n                </ul>\n                <div className={bgFg === 'fg'\n                ? 'px-3 pt-4'\n                : 'visually-hidden'}>\n                  <label className=\"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\"\n                         htmlFor=\"grid-last-name\">\n                    Foreground\n                  </label>\n                  <SketchPicker\n                    color={context.settings.color}\n                    onChangeComplete={color => context.onChangeSettings('color', color.hex)}\n                  />\n                </div>\n                <div className={bgFg === 'bg'\n                ? 'px-3 pt-4'\n                : 'visually-hidden'}>\n                  <label className=\"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\"\n                         htmlFor=\"grid-last-name\">\n                    Background Color\n                  </label>\n                  <SketchPicker\n                    color={context.settings.backgroundColor}\n                    onChangeComplete={color => context.onChangeSettings('backgroundColor', color.hex)}\n                  />\n                </div>\n                <ModalSaveButton\n                    context={context}\n                    label=\"Save Font Settings\"\n                />\n                <ModalCloseButton\n                    context={context}\n                    label=\"Close\"\n                />\n              </form>\n            </Fragment>\n        )}\n      </WidgetContext.Consumer>\n  );\n};\n\nexport default Color;","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/get-iterator\");","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AArDA;AA8DA;AACA;AACA;;;;;;;;;;;ACrFA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}