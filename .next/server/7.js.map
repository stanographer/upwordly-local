{"version":3,"file":"7.js","sources":["webpack:///./components/Controls/ButtonGroup.jsx","webpack:///./components/Controls/Modal.jsx","webpack:///./components/Controls/ModalCloseButton.jsx","webpack:///./components/Controls/ModalSaveButton.jsx","webpack:///./components/Controls/Nav.jsx","webpack:///./components/Controls/NavButton.jsx","webpack:///./components/Controls/ScrollButton.jsx","webpack:///./components/Controls/index.js","webpack:///./components/Logos/NavLogo.jsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/freeze.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  font-size: 1.3rem;\n  padding: 1.2rem;\n`;\n\nconst ButtonGroup = () => {\n  return (\n      <div className=\"fixed-center\">\n        <Button className=\"\n        lg\n        bg-gray-300\n        hover:bg-gray-400\n        text-gray-800\n        font-bold\n        py-2\n        px-4\n        rounded-l\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n               viewBox=\"0 0 20 20\"\n               className=\"\n          fill-current\n          w-4\n          h-4\n          mr-2\">\n            <path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" />\n          </svg>\n          <span>Text Size</span>\n        </Button>\n        <Button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r\">\n          Next\n        </Button>\n      </div>\n  );\n};\n\nexport default ButtonGroup;\n","import React from 'react';\nimport styled from 'styled-components';\nimport dynamic from 'next/dynamic';\n\n// Dynamically loaded components.\nconst FontComponent = dynamic(() => import('../Modal/Font'));\nconst TextComponent = dynamic(() => import('../Modal/Text'));\nconst ColorComponent = dynamic(() => import('../Modal/Color'));\nconst ShareComponent = dynamic(() => import('../Modal/Share'));\n\nconst Title = styled.div`\n  padding-top: 0.5rem;\n  padding-bottom: 2rem;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  line-height: 1.2;\n  font-size: 1.2rem;\n  border-bottom: 1px solid #eee;\n  display: block;\n  width: 100%;\n`;\n\n\nconst Modal = ({title, user, job}) => {\n  const modals = {\n    color: {\n      header: 'Color',\n      component: <ColorComponent />,\n    },\n    font: {\n      header: 'Font',\n      component: <FontComponent />,\n    },\n    share: {\n      header: 'Share',\n      component: <ShareComponent user={user} job={job} />,\n    },\n    text: {\n      header: 'Text',\n      component: <TextComponent />,\n    },\n  };\n\n  return (\n      <div>\n        <Title>{modals[title]['header']}</Title>\n        <div className=\"flex flex-grow-1 my-8\">\n          {\n            modals[title]['component']\n          }\n        </div>\n      </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst ModalCloseButton = ({context, label}) => {\n  return (\n      <button\n          className=\"block border rounded text-pink-200 border-pink-200 bg-bg2 hover:border-transparent hover:text-bg2 hover:bg-pink-200 hover:border-pink-200 text-lg mt-4 mx-2 px-3 py-2 font-apercu\"\n          type=\"button\"\n          onClick={() => context.closeWidget()}>\n        <FontAwesomeIcon icon={faTimesCircle} className=\"pr-2\" />\n        {label}\n      </button>\n  );\n};\n\nexport default ModalCloseButton;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\n\nconst ModalSaveButton = ({context, label}) => {\n  return (\n      <button\n          className=\"block border rounded text-teal-200 border-teal-200 bg-bg2 border-bg2 hover:border-transparent hover:text-bg hover:bg-teal-200 hover:border-teal-200 text-lg mt-8 mx-2 px-3 py-2 font-apercu\"\n          type=\"button\"\n          onClick={() => context.setSettings()}>\n        <FontAwesomeIcon icon={faSave} className=\"pr-2\" />\n        {label}\n      </button>\n  );\n};\n\nexport default ModalSaveButton;\n","import React from 'react';\nimport { NavButton } from '../../components/Controls';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAdjust,\n  faAlignJustify,\n  faFillDrip,\n  faFont,\n  faShareAlt,\n  faTextHeight,\n} from '@fortawesome/free-solid-svg-icons';\nimport WidgetContext from '../../context/widget-context';\nimport NavLogo from '../Logos/NavLogo';\n\nconst icons = {\n  colors: <FontAwesomeIcon icon={faFillDrip} />,\n  lightDarkMode: <FontAwesomeIcon icon={faAdjust} />,\n  font: <FontAwesomeIcon icon={faFont} />,\n  fontSize: <FontAwesomeIcon icon={faTextHeight} />,\n  share: <FontAwesomeIcon icon={faShareAlt} />,\n  text: <FontAwesomeIcon icon={faAlignJustify} />,\n};\n\nconst Nav = () => {\n  return (\n      <WidgetContext.Consumer>\n        {context => (\n            <nav className=\"flex items-center justify-center md:justify-between flex-wrap bg-bg px-1 py-4 md:py-6 sticky\">\n              <NavLogo />\n              <div className=\"\n        flex\n        w-full\n        flex-grow\n        content-center\n        justify-center\n        md:w-1/2\n        md:content-left\n        md:justify-start\n        tab\">\n                <div className=\"lg:flex-grow my-2\">\n                  <NavButton\n                      icon={icons.font}\n                      title=\"Font\"\n                      onClick={e => {\n                        e.preventDefault();\n                        context.openWidget('font');\n                      }}\n                  />\n                  <NavButton\n                      icon={icons.text}\n                      title=\"Text\"\n                      onClick={e => {\n                        e.preventDefault();\n                        context.openWidget('text');\n                      }}\n                  />\n                  <NavButton\n                      icon={icons.colors}\n                      title=\"Colors\"\n                      onClick={e => {\n                        e.preventDefault();\n                        context.openWidget('color');\n                      }}\n                  />\n                </div>\n                <div className=\"my-2\">\n                  <NavButton\n                      icon={icons.share}\n                      title=\"Share\"\n                      onClick={e => {\n                        e.preventDefault();\n                        context.openWidget('share');\n                      }}\n                  />\n                </div>\n              </div>\n            </nav>\n        )}\n      </WidgetContext.Consumer>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavButton = ({icon, title, onClick}) => {\n  return (\n      <a href=\"#\"\n         onClick={onClick}\n         className=\"\n         inline-block\n         text-md\n         mt-2\n         mx-0\n         px-3\n         py-2\n         sm:px-4\n         sm:py-2\n         md:mx-3\n         md:mt-1\n         lg:mt-0\n         leading-none\n         border-none\n         rounded\n         text-teal-200\n         border-white\n         hover:border-transparent\n         hover:text-bg\n         hover:bg-teal-200\n         \">\n        {icon}{ title ? <span className=\"ml-2\">{title}</span> : ''}\n      </a>\n  );\n};\n\nNavButton.propTypes = {\n  icon: PropTypes.object,\n  onClick: PropTypes.func,\n  title: PropTypes.string,\n};\n\nexport default NavButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScrollButton = ({ click, filter, href, id, path, scrolling, title }) => {\n  return (\n      <span className={!scrolling ? 'visible' : 'invisible'}\n          style={{transform: 'matrix(1, 0, 0, 1, 0, 0)'}}\n            onClick={click}>\n      <i className=\"icon\">\n        <svg\n            viewBox=\"0 0 52 52\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <circle id={ id } cx=\"24\" cy=\"24\" r=\"24\" />\n            <filter id={ filter } width=\"114.6%\" height=\"114.6%\" x=\"-7.3%\" y=\"-5.2%\"\n                    filterUnits=\"objectBoundingBox\">\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" stdDeviation=\"1\" />\n              <feColorMatrix in=\"shadowBlurOuter1\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.137256567 0\" />\n            </filter>\n          </defs>\n          <g fill=\"none\" fillRule=\"nonzero\">\n            <g transform=\"translate(2 1)\">\n              <use fill=\"#000\" filter={ `url(#${ filter })` } href={ `#${ href }` }>\n                <circle id=\"scroll-top-b\" cx=\"24\" cy=\"24\" r=\"24\" />\n              </use>\n              <use fill=\"#fff\" href={ `#${ href }` }>\n                <circle id={ id } cx=\"24\" cy=\"24\" r=\"24\" fill=\"#fff\" />\n              </use>\n            </g>\n            <path d={ path } className=\"stroke\" />\n          </g>\n        </svg>\n      </i>\n      <span className=\"visually-hidden\">{ title }</span>\n    </span>\n  );\n};\n\nScrollButton.propTypes = {\n  filter: PropTypes.string,\n  href: PropTypes.string,\n  id: PropTypes.string,\n  path: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default ScrollButton;\n","export { default as ButtonGroup } from './ButtonGroup';\nexport { default as Modal } from './Modal';\nexport { default as ModalCloseButton } from './ModalCloseButton';\nexport { default as ModalSaveButton } from './ModalSaveButton';\nexport { default as Nav } from './Nav';\nexport { default as NavButton } from './NavButton';\nexport { default as ScrollButton } from './ScrollButton';\n\n","import React from 'react';\n\nconst NavLogo = ({center}) => {\n  return (\n      <div className={\n        center\n            ? 'flex items-center flex-shrink-0 text-white mr-6 justify-center'\n            : 'flex items-center flex-shrink-0 text-white mr-6'\n      }>\n        <img style={{width: '2rem', margin: '0 1rem'}}\n             src=\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64' aria-labelledby='title' aria-describedby='desc' role='img' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EMissile%3C/title%3E%3Cdesc%3EA line styled icon from Orion Icon Library.%3C/desc%3E%3Cpath data-name='layer2' d='M11.1 47.3C5.4 50 1.7 54.9 2 62c7.1.4 12-3.4 14.7-9.1' fill='none' stroke='%23dfff5e' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3C/path%3E%3Cpath data-name='layer1' d='M62 2s-13.4-.7-22.6 8.5S8.3 44.4 8.3 44.4l11.3 11.4s24.7-22 33.9-31.2S62 2 62 2z' fill='none' stroke='%23dfff5e' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3C/path%3E%3Ccircle data-name='layer2' cx='44' cy='20' r='4' fill='none' stroke='%23dfff5e' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3C/circle%3E%3Cpath data-name='layer1' fill='none' stroke='%23dfff5e' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13.6 38.5l12 11.9M24.8 26H12.5l-7.7 7.7 11 2.3M37 40.2v12.3l-7.7 7.6L27 49.2'%3E%3C/path%3E%3C/svg%3E\"\n             alt=\"Missile\" />\n        <div className=\"font-semibold text-xl tracking-tight md:content-center\">Upword.ly</div>\n      </div>\n  );\n};\n\nexport default NavLogo;\n","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/freeze\");","import _Object$defineProperties from \"../../core-js/object/define-properties\";\nimport _Object$freeze from \"../../core-js/object/freeze\";\nexport default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return _Object$freeze(_Object$defineProperties(strings, {\n    raw: {\n      value: _Object$freeze(raw)\n    }\n  }));\n}"],"mappings":"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","sourceRoot":""}