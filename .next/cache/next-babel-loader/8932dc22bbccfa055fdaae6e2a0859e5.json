{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport JobCreator from '../../components/Widgets/JobCreator';\nimport JobList from '../../components/Widgets/JobList';\nimport Typed from 'react-typed';\nimport { getUser, getAllJobsByUser } from '../../firebase/db';\n\nvar DashboardComponent = function DashboardComponent(_ref) {\n  var user = _ref.user;\n  console.log('dashboard props', user.uid);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      authUser = _useState2[0],\n      setAuthUser = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jobList = _useState4[0],\n      setJobList = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      job = _useState6[0],\n      setJob = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errors = _useState8[0],\n      setErrors = _useState8[1];\n\n  var loadUser = function loadUser(user) {\n    setAuthUser(user);\n    console.log('username', user.username);\n    getAllJobsByUser(user.username, function (jobs) {\n      return setJobList(jobs);\n    });\n  };\n\n  var setShortName = function setShortName(val) {\n    var re = /^[a-z0-9_\\-]+$/i;\n    val = val.trim().toLowerCase();\n\n    if (!val.match(re) && val !== '') {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n      setErrors(['Your job shortname may only contain lower-case letters, numbers, hyphens, and underscores.']);\n    } else if (val.length > 100) {\n      setErrors(['Your job shortname may not exceed 100 characters in length.']);\n    } else {\n      setJob({\n        shortName: val.trim().toLowerCase()\n      });\n      setErrors([]);\n    }\n  };\n\n  var setTitleAndSpeakers = function setTitleAndSpeakers(key, val) {\n    // Replaces backticks with single quotes.\n    if (val.includes('`')) {\n      val = val.replace('`', '\\'');\n    } // Escapes curly braces.\n\n\n    if (val.includes('{')) {\n      val = val.replace('{', '\\{');\n    }\n\n    if (val.includes('}')) {\n      val = val.replace('{', '\\}');\n    }\n\n    setJob(_objectSpread({}, job, _defineProperty({}, key, val)));\n  };\n\n  useEffect(function () {\n    try {\n      getUser(user.uid, loadUser);\n    } catch (err) {\n      console.error('error', err);\n    }\n  }, []);\n  return React.createElement(Fragment, null, React.createElement(\"p\", {\n    className: \"font-apercu text-5xl\"\n  }, \"Dashboard\"), React.createElement(Typed, {\n    className: \"marquee text-teal-200\",\n    strings: [\"Welcome to your control center.\"],\n    typeSpeed: 40\n  }), authUser ? React.createElement(\"p\", {\n    className: \"pt-4 pb-2 text-green-200\"\n  }, \"Logged in as \", authUser.fullName) : '', React.createElement(\"div\", {\n    className: \"flex flex-wrap -mx-4 my-10\"\n  }, React.createElement(JobCreator, {\n    authUser: authUser,\n    errors: errors,\n    job: job,\n    setShortName: setShortName,\n    setTitleAndSpeakers: setTitleAndSpeakers,\n    uid: user.uid\n  }), React.createElement(JobList, {\n    jobList: jobList\n  })));\n};\n\nexport default DashboardComponent;","map":null,"metadata":{},"sourceType":"module"}