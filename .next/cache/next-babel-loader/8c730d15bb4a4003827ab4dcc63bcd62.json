{"ast":null,"code":"import React from 'react';\nimport { toast } from 'react-toastify/index';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faCopy, faExclamation, faRunning, faWifi } from '@fortawesome/free-solid-svg-icons'; // Toast content components.\n\nvar Copied = function Copied() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu pl-2\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCopy,\n    size: \"lg\"\n  }), React.createElement(\"p\", {\n    className: \"font-bold ml-4 inline\"\n  }, \"Link has been copied to your clipboard!\"));\n};\n\nvar Fetching = function Fetching() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu pl-2\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faRunning,\n    size: \"lg\"\n  }), React.createElement(\"p\", {\n    className: \"font-bold ml-4 inline\"\n  }, \"Fetching job!\"));\n};\n\nvar Loaded = function Loaded() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu p-3\"\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"pr-2\",\n    icon: faCheck\n  }), React.createElement(\"strong\", null, \"Live transcription is now active!\"));\n};\n\nvar Disconnected = function Disconnected() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu p-3\"\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"pr-2\",\n    icon: faExclamation\n  }), React.createElement(\"strong\", null, \"Attempting to reconnect...\"), React.createElement(\"br\", null), React.createElement(\"br\", null), \"You can also try refreshing the page.\");\n};\n\nvar Reconnected = function Reconnected() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu p-3\"\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"pr-2\",\n    icon: faWifi\n  }), React.createElement(\"strong\", null, \"Connection Restored.\"), React.createElement(\"br\", null), React.createElement(\"em\", null, \"Whew! \\uD83E\\uDD84\"));\n}; // Toasts.\n\n\nvar toastId = null;\n\nvar CopiedToast = function CopiedToast() {\n  if (toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(React.createElement(Copied, null), {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n};\n\nvar FetchingToast = function FetchingToast() {\n  return toastId = toast(React.createElement(Fetching, null), {\n    autoClose: false,\n    position: 'bottom-right',\n    type: toast.TYPE.WARNING,\n    closeOnClick: true,\n    draggable: true\n  });\n};\n\nvar LoadedToast = function LoadedToast() {\n  toast.dismiss(toastId);\n  toast(React.createElement(Loaded, null), {\n    autoClose: 3000,\n    type: toast.TYPE.SUCCESS,\n    pauseOnFocusLoss: false,\n    position: 'bottom-right',\n    closeOnClick: true,\n    draggable: false,\n    className: 'rotateY animated'\n  });\n};\n\nvar DisconnectedToast = function DisconnectedToast() {\n  if (!toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(React.createElement(Disconnected, null), {\n      autoClose: false,\n      position: 'top-center',\n      type: toast.TYPE.ERROR,\n      closeOnClick: true,\n      draggable: true,\n      toastId: toastId\n    });\n  }\n};\n\nvar ReconnectedToast = function ReconnectedToast() {\n  if (toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(React.createElement(Reconnected, null), {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n};\n\nexport { CopiedToast, DisconnectedToast, FetchingToast, LoadedToast, ReconnectedToast };","map":null,"metadata":{},"sourceType":"module"}