{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { Fragment, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport WidgetContext from '../../context/widget-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\nimport { faSave } from '@fortawesome/free-solid-svg-icons/index';\nvar ModalCloseButton = dynamic(function () {\n  return import('../Controls').then(function (el) {\n    return el.ModalCloseButton;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../Controls')];\n    },\n    modules: ['../Controls']\n  }\n});\nvar ModalSaveButton = dynamic(function () {\n  return import('../Controls').then(function (el) {\n    return el.ModalSaveButton;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../Controls')];\n    },\n    modules: ['../Controls']\n  }\n}); // Dynamically-loaded components.\n\nvar SketchPicker = dynamic(function () {\n  return import('react-color').then(function (el) {\n    return el.SketchPicker;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-color')];\n    },\n    modules: ['react-color']\n  }\n});\n\nvar Color = function Color() {\n  var _useState = useState('fg'),\n      _useState2 = _slicedToArray(_useState, 2),\n      bgFg = _useState2[0],\n      setBgFg = _useState2[1];\n\n  return React.createElement(WidgetContext.Consumer, null, function (context) {\n    return React.createElement(Fragment, null, React.createElement(\"form\", {\n      className: \"w-full max-w-sm\"\n    }, React.createElement(\"ul\", {\n      className: \"flex list-style-none mp-start-none\"\n    }, React.createElement(\"li\", {\n      className: \"flex-1 mx-2\"\n    }, React.createElement(\"a\", {\n      className: bgFg === 'fg' ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg' : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4',\n      href: \"#\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        setBgFg('fg');\n      }\n    }, \"Foreground\")), React.createElement(\"li\", {\n      className: \"flex-1 mx-2\"\n    }, React.createElement(\"a\", {\n      className: bgFg === 'bg' ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg' : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4',\n      href: \"#\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        setBgFg('bg');\n      }\n    }, \"Background\"))), React.createElement(\"div\", {\n      className: bgFg === 'fg' ? 'px-3 pt-4' : 'visually-hidden'\n    }, React.createElement(\"label\", {\n      className: \"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\",\n      htmlFor: \"grid-last-name\"\n    }, \"Foreground\"), React.createElement(SketchPicker, {\n      color: context.settings.color,\n      onChangeComplete: function onChangeComplete(color) {\n        return context.onChangeSettings('color', color.hex);\n      }\n    })), React.createElement(\"div\", {\n      className: bgFg === 'bg' ? 'px-3 pt-4' : 'visually-hidden'\n    }, React.createElement(\"label\", {\n      className: \"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\",\n      htmlFor: \"grid-last-name\"\n    }, \"Background Color\"), React.createElement(SketchPicker, {\n      color: context.settings.backgroundColor,\n      onChangeComplete: function onChangeComplete(color) {\n        return context.onChangeSettings('backgroundColor', color.hex);\n      }\n    })), React.createElement(ModalSaveButton, {\n      context: context,\n      label: \"Save Font Settings\"\n    }), React.createElement(ModalCloseButton, {\n      context: context,\n      label: \"Close\"\n    })));\n  });\n};\n\nexport default Color;","map":null,"metadata":{},"sourceType":"module"}