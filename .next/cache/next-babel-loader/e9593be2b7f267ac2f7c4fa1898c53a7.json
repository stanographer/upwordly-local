{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Fragment } from 'react';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { animateScroll as scroll } from 'react-scroll'; // Components.\n\nimport TextArea from '../../src/components/LiveTranscript/TextArea';\nimport LiveTranscript from '../../src/components/LiveTranscript';\nimport Provider from '../../src/components/Session/Provider';\nimport WidgetContext from '../../src/context/widget-context'; // Dynamic imports.\n\nvar ScrollButton = dynamic(function () {\n  return import('../../src/components/Controls').then(function (el) {\n    return el.ScrollButton;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../src/components/Controls')];\n    },\n    modules: ['../../src/components/Controls']\n  }\n});\nvar Nav = dynamic(function () {\n  return import('../../src/components/Controls').then(function (el) {\n    return el.Nav;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../src/components/Controls')];\n    },\n    modules: ['../../src/components/Controls']\n  }\n});\nvar Modal = dynamic(function () {\n  return import('react-modal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-modal')];\n    },\n    modules: ['react-modal']\n  }\n});\nvar ModalComponent = dynamic(function () {\n  return import('../../src/components/Controls').then(function (el) {\n    return el.Modal;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../src/components/Controls')];\n    },\n    modules: ['../../src/components/Controls']\n  }\n});\nvar modalStyles = {\n  content: {\n    backgroundColor: '#282c34',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 15px 30px 0 rgba(0, 0, 0, 0.11), 0 5px 15px 0 rgba(0, 0, 0, 0.08)'\n  },\n  overlay: {\n    backgroundColor: 'rgb(0, 0, 0, 0.3)'\n  }\n};\n\nvar View =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(View, _React$Component);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(View).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"interval\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startScrolling\", function () {\n      // Set the scrolling state to scrolling.\n      _this.setState({\n        scrolling: true\n      }); // Begin auto-scrolling.\n\n\n      _this.interval = setInterval(function () {\n        scroll.scrollToBottom({\n          delay: 0,\n          duration: 100,\n          offset: 30,\n          isDynamic: true,\n          smooth: true\n        });\n      }, 500);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopScrolling\", function () {\n      // Stop auto-scrolling.\n      _this.setState({\n        scrolling: false\n      });\n\n      clearInterval(_this.interval);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openModal\", function () {\n      _this.setState({\n        modalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _this.state = {\n      scrolling: true,\n      modalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // On component load, begin auto-scrolling.\n      this.startScrolling();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopScrolling();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var scrolling = this.state.scrolling;\n      var router = this.props.router;\n      return React.createElement(Provider, null, React.createElement(WidgetContext.Consumer, null, function (context) {\n        return React.createElement(Fragment, null, React.createElement(Modal, {\n          isOpen: context.widgetOpen,\n          onRequestClose: context.closeWidget,\n          contentLabel: \"Widget Modal\",\n          style: modalStyles,\n          ariaHideApp: false\n        }, React.createElement(ModalComponent, {\n          user: router.query.user,\n          job: router.query.job,\n          title: context.currentWidget\n        })), React.createElement(\"div\", {\n          className: !scrolling ? 'visible sticky' : 'invisible sticky'\n        }, React.createElement(Nav, {\n          openModal: _this2.openModal,\n          closeModal: _this2.closeModal\n        })), React.createElement(\"div\", {\n          style: _objectSpread({}, context.settings, {\n            fontSize: context.settings.fontSize / 10 + 'rem',\n            padding: context.settings.paddingY + 'rem' + ' ' + context.settings.paddingX + 'rem'\n          }),\n          onTouchStart: function onTouchStart() {\n            return _this2.stopScrolling();\n          },\n          onClick: function onClick() {\n            return _this2.stopScrolling();\n          }\n        }, React.createElement(LiveTranscript, {\n          user: router.query.user,\n          job: router.query.job,\n          render: function render(state) {\n            return React.createElement(TextArea, _extends({\n              editable: false\n            }, state));\n          }\n        })), React.createElement(ScrollButton, {\n          \"aria-label\": \"Scroll to Bottom\",\n          click: function click() {\n            _this2.startScrolling();\n          },\n          filter: \"scroll-top-a\",\n          href: \"scroll-top-b\",\n          id: \"scroll-top-b\",\n          path: \"M18 22l8 8 8-8\",\n          scrolling: scrolling,\n          title: \"Scroll to Bottom\"\n        }));\n      }));\n    }\n  }]);\n\n  return View;\n}(React.Component);\n\nexport default withRouter(View);","map":null,"metadata":{},"sourceType":"module"}