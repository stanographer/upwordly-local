{"ast":null,"code":"var _jsxFileName = \"/Users/stanleysakai/Developer/upwordly-local/pages/signup/NameAndLocation.jsx\";\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nvar GeoSuggest = dynamic(function () {\n  return import('react-geosuggest');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-geosuggest')];\n    },\n    modules: ['react-geosuggest']\n  }\n});\n\nvar NameAndLocation = function NameAndLocation(_ref) {\n  var errors = _ref.errors,\n      fullNameValue = _ref.fullNameValue,\n      handleInput = _ref.handleInput,\n      locationValue = _ref.locationValue,\n      nextStep = _ref.nextStep;\n  var errorMessages = errors.map(function (e, i) {\n    return React.createElement(\"p\", {\n      className: \"text-sm text-red-400 mb-2\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, e);\n  });\n  return React.createElement(\"form\", {\n    className: \"bg-bg2 shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      nextStep(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-sm mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Please enter the name by which you'd like to be called. First and last is great; just first is fine, too!\"), React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md mb-2\",\n    htmlFor: \"fullName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Full Name\"), React.createElement(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    spellCheck: false,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-bg focus:bg-blue-100 text-md font-mono tracking-wide\",\n    id: \"fullName\",\n    name: \"fullName\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    value: fullNameValue,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mb-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md mb-2\",\n    htmlFor: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Location\"), React.createElement(GeoSuggest, {\n    className: \"shadow bg-white appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg text-md font-mono tracking-wide\",\n    id: \"location\",\n    name: \"location\",\n    placeholder: \"Location\",\n    autoComplete: \"off\",\n    value: locationValue,\n    style: {\n      'input': {\n        backgroundColor: '#fff',\n        width: '100%'\n      },\n      'suggests': {\n        color: '#718096',\n        backgroundColor: '#fff'\n      },\n      'suggestItem': {\n        backgroundColor: '#fff'\n      }\n    },\n    onSuggestSelect: function onSuggestSelect(val) {\n      return handleInput({\n        target: {\n          name: 'location',\n          value: val,\n          type: 'input'\n        }\n      });\n    },\n    highlightMatch: true,\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), !!errors ? errorMessages : '', React.createElement(\"button\", {\n    className: \"bg-blue w-full hover:bg-blue-dark text-teal-200 font-bold py-2 px-4 rounded border-white hover:border-transparent hover:text-bg hover:bg-teal-200\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Continue\", React.createElement(FontAwesomeIcon, {\n    icon: faArrowRight,\n    className: \"mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nexport default NameAndLocation;","map":{"version":3,"sources":["/Users/stanleysakai/Developer/upwordly-local/pages/signup/NameAndLocation.jsx"],"names":["React","dynamic","faArrowRight","FontAwesomeIcon","GeoSuggest","NameAndLocation","errors","fullNameValue","handleInput","locationValue","nextStep","errorMessages","map","e","i","preventDefault","backgroundColor","width","color","val","target","name","value","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dynamic from 'next/dynamic';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst GeoSuggest = dynamic(() => import('react-geosuggest'));\n\nconst NameAndLocation = ({errors, fullNameValue, handleInput, locationValue, nextStep}) => {\n  const errorMessages = errors.map((e, i) => (\n      <p className=\"text-sm text-red-400 mb-2\" key={i}>{e}</p>\n  ));\n\n  return (\n      <form className=\"bg-bg2 shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n            onSubmit={e => {\n              e.preventDefault();\n              nextStep(e);\n            }}>\n        <div className=\"mb-4\">\n          <p className=\"text-sm mb-4\">\n            Please enter the name by which you'd like to be called. First and last is great; just first is fine, too!\n          </p>\n          <label className=\"block text-grey-darker text-md mb-2\"\n                 htmlFor=\"fullName\">\n            Full Name\n          </label>\n          <input autoFocus={true}\n                 autoComplete=\"off\"\n                 spellCheck={false}\n                 className=\"shadow appearance-none border rounded w-full py-2 px-3 text-bg focus:bg-blue-100 text-md font-mono tracking-wide\"\n                 id=\"fullName\"\n                 name=\"fullName\"\n                 type=\"text\"\n                 placeholder=\"Full Name\"\n                 value={fullNameValue}\n                 onChange={e => handleInput(e)}\n                 required\n          />\n        </div>\n        <div className=\"mb-6\">\n          <label className=\"block text-grey-darker text-md mb-2\"\n                 htmlFor=\"location\">\n            Location\n          </label>\n          <GeoSuggest\n              className=\"shadow bg-white appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg text-md font-mono tracking-wide\"\n              id=\"location\"\n              name=\"location\"\n              placeholder=\"Location\"\n              autoComplete=\"off\"\n              value={locationValue}\n              style={{\n                'input': {\n                  backgroundColor: '#fff',\n                  width: '100%',\n                },\n                'suggests': {\n                  color: '#718096',\n                  backgroundColor: '#fff',\n                },\n                'suggestItem': {\n                  backgroundColor: '#fff',\n                }\n              }}\n              onSuggestSelect={val => handleInput({\n                target: {\n                  name: 'location',\n                  value: val,\n                  type: 'input',\n                }\n              })}\n              highlightMatch={true}\n              type=\"text\"\n              required\n          />\n        </div>\n        {\n          !!errors\n              ? errorMessages\n              : ''\n        }\n        <button\n            className=\"bg-blue w-full hover:bg-blue-dark text-teal-200 font-bold py-2 px-4 rounded border-white hover:border-transparent hover:text-bg hover:bg-teal-200\"\n            type=\"submit\">\n          Continue\n          <FontAwesomeIcon icon={faArrowRight} className=\"mx-2\" />\n        </button>\n      </form>\n  );\n};\n\nexport default NameAndLocation;\n"]},"metadata":{},"sourceType":"module"}