{"ast":null,"code":"var _jsxFileName = \"/Users/stanleysakai/Developer/upwordly-local/pages/signup/UserInfo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nvar UserInfo = function UserInfo(_ref) {\n  var errors = _ref.errors,\n      handleInput = _ref.handleInput,\n      nextStep = _ref.nextStep,\n      passwordValue = _ref.passwordValue,\n      usernameValue = _ref.usernameValue;\n  var errorMessages = errors.map(function (e, i) {\n    return React.createElement(\"p\", {\n      className: \"text-sm text-red-400 mb-4\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, e);\n  });\n  return React.createElement(\"form\", {\n    className: \"bg-bg2 shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      nextStep(usernameValue, passwordValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-sm mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Now create a username that is unique, all lowercase, and simple.\"), React.createElement(\"p\", {\n    className: \"text-sm mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Live transcript links you share will contain your username so making it unnecessarily long or complex will make your URLs harder to remember and more prone to typos.\"), React.createElement(\"p\", {\n    className: \"text-sm mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Links look like this. The portion of the url that contains your username is highlighted in red: \", React.createElement(\"a\", {\n    href: \"https://upword.ly/stanley/coachella-2019\",\n    className: \"text-green-200 underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"upword.ly/\", React.createElement(\"span\", {\n    className: \"text-red-300\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, usernameValue || 'stanley'), \"/coachella-2019\")), React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md mb-2\",\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    autoComplete: \"off\",\n    spellCheck: false,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-bg focus:bg-blue-100 text-md font-mono tracking-wide\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    value: usernameValue,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mb-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md mb-2\",\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg text-md font-mono tracking-wide\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    value: passwordValue,\n    onChange: function onChange(e) {\n      return handleInput(e);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), !!errors ? errorMessages : '', React.createElement(\"button\", {\n    className: \"bg-blue w-full hover:bg-blue-dark text-teal-200 font-bold py-2 px-4 rounded border-white hover:border-transparent hover:text-bg hover:bg-teal-200\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Continue\", React.createElement(FontAwesomeIcon, {\n    icon: faArrowRight,\n    className: \"mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/stanleysakai/Developer/upwordly-local/pages/signup/UserInfo.jsx"],"names":["React","FontAwesomeIcon","faArrowRight","UserInfo","errors","handleInput","nextStep","passwordValue","usernameValue","errorMessages","map","e","i","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nconst UserInfo = ({errors, handleInput, nextStep, passwordValue, usernameValue}) => {\n  const errorMessages = errors.map((e, i) => (\n      <p className=\"text-sm text-red-400 mb-4\" key={i}>{e}</p>\n  ));\n\n  return (\n      <form className=\"bg-bg2 shadow-md rounded px-8 pt-6 pb-8 mb-4\" onSubmit={e => {\n        e.preventDefault();\n        nextStep(usernameValue, passwordValue);\n      }}>\n        <div className=\"mb-4\">\n          <p className=\"text-sm mb-4\">Now create a username that is unique, all lowercase, and simple.</p>\n          <p className=\"text-sm mb-4\">Live transcript links you share will contain your username so making it\n                                      unnecessarily long or complex will make your URLs harder to remember and more prone to typos.</p>\n          <p className=\"text-sm mb-4\">Links look like this. The portion of the url that contains your username is\n                                      highlighted in red: <a href=\"https://upword.ly/stanley/coachella-2019\"\n                                                             className=\"text-green-200 underline\">upword.ly/<span\n                className=\"text-red-300\">{usernameValue || 'stanley'}</span>/coachella-2019</a></p>\n          <label className=\"block text-grey-darker text-md mb-2\" htmlFor=\"username\">\n            Username\n          </label>\n          <input autoComplete=\"off\"\n                 spellCheck={false}\n                 className=\"shadow appearance-none border rounded w-full py-2 px-3 text-bg focus:bg-blue-100 text-md font-mono tracking-wide\"\n                 id=\"username\"\n                 name=\"username\"\n                 type=\"text\"\n                 placeholder=\"Username\"\n                 value={usernameValue}\n                 onChange={e => handleInput(e)}\n                 required\n          />\n        </div>\n        <div className=\"mb-6\">\n          <label className=\"block text-grey-darker text-md mb-2\"\n                 htmlFor=\"password\">\n            Password\n          </label>\n          <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg text-md font-mono tracking-wide\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={passwordValue}\n              onChange={e => handleInput(e)}\n              required\n          />\n        </div>\n        {\n          !!errors\n              ? errorMessages\n              : ''\n        }\n        <button\n            className=\"bg-blue w-full hover:bg-blue-dark text-teal-200 font-bold py-2 px-4 rounded border-white hover:border-transparent hover:text-bg hover:bg-teal-200\"\n            type=\"submit\">\n          Continue\n          <FontAwesomeIcon icon={faArrowRight} className=\"mx-2\" />\n        </button>\n      </form>\n  );\n};\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}