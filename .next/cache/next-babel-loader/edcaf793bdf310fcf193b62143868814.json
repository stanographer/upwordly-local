{"ast":null,"code":"// Downloads transcripts to txt.\nfunction fetchTranscript(job, user) {\n  // Added BOM so that it opens in UTF-8 encoding.\n  var BOM = \"\\uFEFF\";\n  var fileName = \"\".concat(job, \" (\").concat(user, \").txt\");\n  var node = document.querySelector('.transcript');\n  var transcript = BOM + node.textContent;\n  var transcriptBlob = new Blob([transcript], {\n    type: 'text/plain; charset=utf-8'\n  }); // Create a hidden link.\n\n  var downloadLink = document.createElement('a'); // Set the download file name.\n\n  downloadLink.download = fileName; // Text can be anything because it's not shown to the user.\n\n  downloadLink.innerHTML = 'My Hidden Download Link'; // We want to remove the download link once we're done.\n\n  downloadLink.onclick = function (e) {\n    return document.body.removeChild(e.target);\n  }; // Set the URL to the transcript blob.\n\n\n  downloadLink.href = window.URL.createObjectURL(transcriptBlob); // Make sure download link is never shown to user.\n\n  downloadLink.style.display = 'none'; // Append it to the document.\n\n  document.body.appendChild(downloadLink); // \"Click\" on the download link.\n\n  downloadLink.click();\n  return transcript;\n}\n\nexport { fetchTranscript };","map":{"version":3,"sources":["/Users/stanleysakai/Developer/upwordly-local/utils/fetchTranscript.js"],"names":["fetchTranscript","job","user","BOM","fileName","node","document","querySelector","transcript","textContent","transcriptBlob","Blob","type","downloadLink","createElement","download","innerHTML","onclick","e","body","removeChild","target","href","window","URL","createObjectURL","style","display","appendChild","click"],"mappings":"AAAA;AAEA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAElC;AACA,MAAMC,GAAG,GAAG,QAAZ;AACA,MAAMC,QAAQ,aAAMH,GAAN,eAAcC,IAAd,UAAd;AACA,MAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAb;AACA,MAAMC,UAAU,GAAGL,GAAG,GAAGE,IAAI,CAACI,WAA9B;AACA,MAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,CAACH,UAAD,CAAT,EAAuB;AAC5CI,IAAAA,IAAI,EAAE;AADsC,GAAvB,CAAvB,CAPkC,CAWlC;;AACA,MAAMC,YAAY,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,GAAvB,CAArB,CAZkC,CAclC;;AACAD,EAAAA,YAAY,CAACE,QAAb,GAAwBX,QAAxB,CAfkC,CAiBlC;;AACAS,EAAAA,YAAY,CAACG,SAAb,GAAyB,yBAAzB,CAlBkC,CAoBlC;;AACAH,EAAAA,YAAY,CAACI,OAAb,GAAuB,UAAAC,CAAC;AAAA,WAAIZ,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0BF,CAAC,CAACG,MAA5B,CAAJ;AAAA,GAAxB,CArBkC,CAuBlC;;;AACAR,EAAAA,YAAY,CAACS,IAAb,GAAoBC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2Bf,cAA3B,CAApB,CAxBkC,CA0BlC;;AACAG,EAAAA,YAAY,CAACa,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B,CA3BkC,CA6BlC;;AACArB,EAAAA,QAAQ,CAACa,IAAT,CAAcS,WAAd,CAA0Bf,YAA1B,EA9BkC,CAgClC;;AACAA,EAAAA,YAAY,CAACgB,KAAb;AAEA,SAAOrB,UAAP;AACD;;AAED,SAASR,eAAT","sourcesContent":["// Downloads transcripts to txt.\n\nfunction fetchTranscript(job, user) {\n\n  // Added BOM so that it opens in UTF-8 encoding.\n  const BOM = '\\uFEFF';\n  const fileName = `${job} (${user}).txt`;\n  const node = document.querySelector('.transcript');\n  const transcript = BOM + node.textContent;\n  const transcriptBlob = new Blob([transcript], {\n    type: 'text/plain; charset=utf-8',\n  });\n\n  // Create a hidden link.\n  const downloadLink = document.createElement('a');\n\n  // Set the download file name.\n  downloadLink.download = fileName;\n\n  // Text can be anything because it's not shown to the user.\n  downloadLink.innerHTML = 'My Hidden Download Link';\n\n  // We want to remove the download link once we're done.\n  downloadLink.onclick = e => document.body.removeChild(e.target);\n\n  // Set the URL to the transcript blob.\n  downloadLink.href = window.URL.createObjectURL(transcriptBlob);\n\n  // Make sure download link is never shown to user.\n  downloadLink.style.display = 'none';\n\n  // Append it to the document.\n  document.body.appendChild(downloadLink);\n\n  // \"Click\" on the download link.\n  downloadLink.click();\n\n  return transcript;\n}\n\nexport { fetchTranscript };"]},"metadata":{},"sourceType":"module"}