{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { createJob } from '../../firebase/db';\n\nvar JobCreator = function JobCreator(_ref) {\n  var authUser = _ref.authUser,\n      errors = _ref.errors,\n      job = _ref.job,\n      setShortName = _ref.setShortName,\n      setTitleAndSpeakers = _ref.setTitleAndSpeakers,\n      uid = _ref.uid;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var copiedLink = function copiedLink() {\n    setCopied(true);\n    setTimeout(function () {\n      return setCopied(false);\n    }, 1500);\n  };\n\n  var errorMessages = errors.map(function (e, i) {\n    return React.createElement(\"p\", {\n      className: \"text-sm text-red-400 mb-4\",\n      key: i\n    }, e);\n  });\n  return React.createElement(\"form\", {\n    className: \"w-full lg:w-1/2 px-4\",\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      createJob(job, authUser.username, uid);\n    }\n  }, React.createElement(\"div\", {\n    className: \"bg-bg2 border-t border-b sm:rounded sm:border shadow\"\n  }, React.createElement(\"div\", {\n    className: \"border-b\"\n  }, React.createElement(\"div\", {\n    className: \"flex justify-between px-6 -mb-px\"\n  }, React.createElement(\"h3\", {\n    className: \"text-green-200 py-4 font-normal text-lg\"\n  }, \"Start a Job\"), React.createElement(\"div\", {\n    className: \"flex\"\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"appearance-none py-4 text-blue-dark border-b border-blue-dark mr-3\"\n  }, \"List\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"appearance-none py-4 text-grey-dark border-b border-transparent hover:border-grey-dark\"\n  }, \"Chart\")))), React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"mb-4 px-8 pt-8\"\n  }, React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md text-bold mb-2\",\n    htmlFor: \"shortname\"\n  }, \"Shortname (required)\"), React.createElement(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    spellCheck: false,\n    className: !!errors && errors.length > 0 ? 'border-red-500 bg-red-100 shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-red-2100 text-bg font-mono text-md' : 'shadow-lg bg-orange-200 appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg font-mono text-md\"',\n    id: \"shortname\",\n    name: \"shortname\",\n    type: \"shortname\",\n    placeholder: \"(i.e. coachella2019)\",\n    value: job.shortName || '',\n    onChange: function onChange(e) {\n      return setShortName(e.target.value);\n    },\n    required: true\n  })), React.createElement(\"div\", {\n    className: \"mb-4 px-8\"\n  }, React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md text-bold mb-2\",\n    htmlFor: \"title\"\n  }, \"Title (optional)\"), React.createElement(\"input\", {\n    autoComplete: \"off\",\n    spellCheck: false,\n    className: \"shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg font-mono text-md\",\n    id: \"title\",\n    name: \"title\",\n    type: \"title\",\n    placeholder: \"(i.e. Spreadsheets IRL: The How and Why)\",\n    value: job.title || '',\n    onChange: function onChange(e) {\n      return setTitleAndSpeakers(e.target.name, e.target.value);\n    }\n  })), React.createElement(\"div\", {\n    className: \"mb-4 px-8\"\n  }, React.createElement(\"label\", {\n    className: \"block text-grey-darker text-md text-bold mb-2\",\n    htmlFor: \"speakers\"\n  }, \"Speakers (optional)\"), React.createElement(\"input\", {\n    autoComplete: \"off\",\n    spellCheck: false,\n    className: \"shadow-lg appearance-none border rounded w-full py-2 px-3 focus:bg-blue-100 text-bg font-mono text-md\",\n    id: \"speakers\",\n    name: \"speakers\",\n    type: \"speakers\",\n    placeholder: \"(i.e. Christopher Hagan, Stanley Sakai)\",\n    value: job.speakers || '',\n    onChange: function onChange(e) {\n      return setTitleAndSpeakers(e.target.name, e.target.value);\n    }\n  }), !errors.length && job.shortName && job.shortName.length > 0 ? React.createElement(CopyToClipboard, {\n    text: \"\".concat(document.location.protocol, \"//\").concat(document.location.host, \"/\").concat(authUser.username, \"/\").concat(job.shortName),\n    onCopy: function onCopy() {\n      return copiedLink();\n    }\n  }, React.createElement(\"p\", {\n    className: copied ? 'underline border py-4 px-4 mt-6 bg-green-200 text-bg2 font-mono break-words cursor-pointer' : 'underline border py-4 px-4 mt-6 text-teal-200 font-mono break-words cursor-pointer'\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"mx-4\",\n    icon: faClipboard\n  }), \"\".concat(document.location.protocol, \"//\").concat(document.location.host, \"/\").concat(authUser.username, \"/\").concat(job.shortName))) : ''), React.createElement(\"div\", {\n    className: \"text-center px-6 py-4\"\n  }, !!errors ? errorMessages : '', copied ? React.createElement(\"p\", {\n    className: \"text-lg text-green-400 mb-4\"\n  }, \"Link copied to clipboard!\") : '', React.createElement(\"div\", {\n    className: \"py-8\"\n  }, React.createElement(\"div\", {\n    className: \"mb-4\"\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"bg-blue hover:bg-blue-dark text-white border border-blue-dark rounded px-6 py-4\"\n  }, \"Create Job\")))))));\n};\n\nexport default JobCreator;","map":null,"metadata":{},"sourceType":"module"}