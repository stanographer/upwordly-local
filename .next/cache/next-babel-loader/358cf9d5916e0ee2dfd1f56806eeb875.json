{"ast":null,"code":"var _jsxFileName = \"/Users/stanleysakai/Developer/upwordly-local/src/components/Toasts/index.js\";\nimport React from 'react';\nimport { toast } from 'react-toastify/index';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faCopy, faExclamation, faRunning, faWifi } from '@fortawesome/free-solid-svg-icons'; // Toast content components.\n\nvar Copied = function Copied() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu pl-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCopy,\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"font-bold ml-4 inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Link has been copied to your clipboard!\"));\n};\n\nvar Fetching = function Fetching() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu pl-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faRunning,\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"font-bold ml-4 inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Fetching job!\"));\n};\n\nvar Loaded = function Loaded() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"pr-2\",\n    icon: faCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Live transcription is now active!\"));\n};\n\nvar Disconnected = function Disconnected() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"pr-2\",\n    icon: faExclamation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Attempting to reconnect...\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \"You can also try refreshing the page.\");\n};\n\nvar Reconnected = function Reconnected() {\n  return React.createElement(\"div\", {\n    className: \"text-lg text-bg font-apercu p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"pr-2\",\n    icon: faWifi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Connection Restored.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Whew! \\uD83E\\uDD84\"));\n}; // Toasts.\n\n\nvar toastId = null;\n\nvar CopiedToast = function CopiedToast() {\n  if (toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(React.createElement(Copied, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n};\n\nvar FetchingToast = function FetchingToast() {\n  return toastId = toast(React.createElement(Fetching, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), {\n    autoClose: false,\n    position: 'bottom-right',\n    type: toast.TYPE.WARNING,\n    closeOnClick: true,\n    draggable: true\n  });\n};\n\nvar LoadedToast = function LoadedToast() {\n  toast.dismiss(toastId);\n  toast(React.createElement(Loaded, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), {\n    autoClose: 3000,\n    type: toast.TYPE.SUCCESS,\n    pauseOnFocusLoss: false,\n    position: 'bottom-right',\n    closeOnClick: true,\n    draggable: false,\n    className: 'rotateY animated'\n  });\n};\n\nvar DisconnectedToast = function DisconnectedToast() {\n  if (!toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(React.createElement(Disconnected, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), {\n      autoClose: false,\n      position: 'top-center',\n      type: toast.TYPE.ERROR,\n      closeOnClick: true,\n      draggable: true,\n      toastId: toastId\n    });\n  }\n};\n\nvar ReconnectedToast = function ReconnectedToast() {\n  if (toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(React.createElement(Reconnected, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n};\n\nexport { CopiedToast, DisconnectedToast, FetchingToast, LoadedToast, ReconnectedToast };","map":{"version":3,"sources":["/Users/stanleysakai/Developer/upwordly-local/src/components/Toasts/index.js"],"names":["React","toast","FontAwesomeIcon","faCheck","faCopy","faExclamation","faRunning","faWifi","Copied","Fetching","Loaded","Disconnected","Reconnected","toastId","CopiedToast","isActive","dismiss","autoClose","position","type","TYPE","SUCCESS","closeOnClick","draggable","FetchingToast","WARNING","LoadedToast","pauseOnFocusLoss","className","DisconnectedToast","ERROR","ReconnectedToast"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toast } from 'react-toastify/index';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faCopy,\n  faExclamation,\n  faRunning,\n  faWifi,\n} from '@fortawesome/free-solid-svg-icons';\n\n// Toast content components.\n\nconst Copied = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu pl-2\">\n        <FontAwesomeIcon\n            icon={faCopy}\n            size=\"md\"\n        />\n        <p className=\"font-bold ml-4 inline\">Link has been copied to your clipboard!</p>\n      </div>\n  );\n};\n\nconst Fetching = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu pl-2\">\n        <FontAwesomeIcon\n            icon={faRunning}\n            size=\"md\"\n        />\n        <p className=\"font-bold ml-4 inline\">Fetching job!</p>\n      </div>\n  );\n};\n\nconst Loaded = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu p-3\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faCheck}\n        />\n        <strong>Live transcription is now active!</strong>\n      </div>\n  );\n};\n\nconst Disconnected = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu p-3\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faExclamation}\n        />\n        <strong>Attempting to reconnect...</strong>\n        <br />\n        <br />\n        You can also try refreshing the page.\n      </div>\n  );\n};\n\nconst Reconnected = () => {\n  return (\n      <div className=\"text-lg text-bg font-apercu p-3\">\n        <FontAwesomeIcon\n            className=\"pr-2\"\n            icon={faWifi}\n        />\n        <strong>Connection Restored.</strong>\n        <br />\n        <em>Whew! 🦄</em>\n\n      </div>\n  );\n};\n\n// Toasts.\n\nlet toastId = null;\n\nconst CopiedToast = () => {\n  if (toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(<Copied />, {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n};\n\nconst FetchingToast = () => toastId = toast(<Fetching />, {\n  autoClose: false,\n  position: 'bottom-right',\n  type: toast.TYPE.WARNING,\n  closeOnClick: true,\n  draggable: true\n});\n\nconst LoadedToast = () => {\n  toast.dismiss(toastId);\n  toast(<Loaded />, {\n    autoClose: 3000,\n    type: toast.TYPE.SUCCESS,\n    pauseOnFocusLoss: false,\n    position: 'bottom-right',\n    closeOnClick: true,\n    draggable: false,\n    className: 'rotateY animated'\n  });\n};\n\nconst DisconnectedToast = () => {\n  if (!toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(<Disconnected />, {\n      autoClose: false,\n      position: 'top-center',\n      type: toast.TYPE.ERROR,\n      closeOnClick: true,\n      draggable: true,\n      toastId: toastId\n    });\n  }\n\n};\n\nconst ReconnectedToast = () => {\n  if (toast.isActive(toastId)) {\n    toast.dismiss(toastId);\n    toastId = toast(<Reconnected />, {\n      autoClose: 1500,\n      position: 'top-center',\n      type: toast.TYPE.SUCCESS,\n      closeOnClick: true,\n      draggable: true\n    });\n  }\n};\n\nexport {\n  CopiedToast,\n  DisconnectedToast,\n  FetchingToast,\n  LoadedToast,\n  ReconnectedToast,\n};"]},"metadata":{},"sourceType":"module"}