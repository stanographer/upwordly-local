{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/stanleysakai/Developer/upwordly-local/src/components/Session/Provider.js\";\nimport React from 'react';\nimport WidgetContext from '../../context/widget-context';\n\nvar AppProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppProvider, _React$Component);\n\n  function AppProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currentWidget: '',\n      settings: {},\n      widgetOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"INITIAL_SETTINGS\", {\n      backgroundColor: 'rgb(30,34,39)',\n      color: '#fffce1',\n      fontFamily: 'Apercu',\n      fontSize: '30',\n      lineHeight: '1.3',\n      paddingX: '2',\n      paddingY: '2'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openWidget\", function (widget) {\n      _this.setState({\n        currentWidget: widget,\n        widgetOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeWidget\", function () {\n      _this.setState({\n        widgetOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSettings\", function () {\n      // Get settings from localstorage.\n      var settings;\n\n      try {\n        settings = window.localStorage.getItem('upwordly-settings') || _this.INITIAL_SETTINGS;\n\n        _this.setState({\n          settings: JSON.parse(settings)\n        }, function () {\n          return console.log('settings state ', _this.state.settings);\n        });\n      } catch (_unused) {\n        // If settings cannot be loaded, load initial state.\n        _this.setState({\n          settings: _this.INITIAL_SETTINGS\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeSettings\", function (key, value) {\n      var settings = _this.state.settings;\n\n      _this.setState({\n        settings: _objectSpread({}, settings, _defineProperty({}, key, value))\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSettings\", function () {\n      // Save settings to localstorage.\n      try {\n        window.localStorage.setItem('upwordly-settings', _JSON$stringify(_this.state.settings));\n      } catch (_unused2) {\n        console.log('Error retrieving from localstorage.');\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(AppProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSettings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentWidget = _this$state.currentWidget,\n          settings = _this$state.settings,\n          widgetOpen = _this$state.widgetOpen;\n      return React.createElement(WidgetContext.Provider, {\n        value: {\n          currentWidget: currentWidget,\n          settings: settings,\n          widgetOpen: widgetOpen,\n          onChangeSettings: this.onChangeSettings,\n          openWidget: this.openWidget,\n          closeWidget: this.closeWidget,\n          getSettings: this.getSettings,\n          setSettings: this.setSettings\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return AppProvider;\n}(React.Component);\n\nexport default AppProvider;","map":{"version":3,"sources":["/Users/stanleysakai/Developer/upwordly-local/src/components/Session/Provider.js"],"names":["React","WidgetContext","AppProvider","currentWidget","settings","widgetOpen","backgroundColor","color","fontFamily","fontSize","lineHeight","paddingX","paddingY","widget","setState","window","localStorage","getItem","INITIAL_SETTINGS","JSON","parse","console","log","state","key","value","setItem","getSettings","onChangeSettings","openWidget","closeWidget","setSettings","props","children","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;IAEMC,W;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,UAAU,EAAE;AAHN,K;;uEAMW;AACjBC,MAAAA,eAAe,EAAE,eADA;AAEjBC,MAAAA,KAAK,EAAE,SAFU;AAGjBC,MAAAA,UAAU,EAAE,QAHK;AAIjBC,MAAAA,QAAQ,EAAE,IAJO;AAKjBC,MAAAA,UAAU,EAAE,KALK;AAMjBC,MAAAA,QAAQ,EAAE,GANO;AAOjBC,MAAAA,QAAQ,EAAE;AAPO,K;;iEAUN,UAAAC,MAAM,EAAI;AACrB,YAAKC,QAAL,CAAc;AACZX,QAAAA,aAAa,EAAEU,MADH;AAEZR,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID,K;;kEAEa,YAAM;AAClB,YAAKS,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;kEAEa,YAAM;AAElB;AACA,UAAID,QAAJ;;AAEA,UAAI;AACFA,QAAAA,QAAQ,GAAGW,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,KAAoD,MAAKC,gBAApE;;AAEA,cAAKJ,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAEe,IAAI,CAACC,KAAL,CAAWhB,QAAX;AADE,SAAd,EAEG;AAAA,iBAAMiB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAKC,KAAL,CAAWnB,QAA1C,CAAN;AAAA,SAFH;AAGD,OAND,CAME,gBAAM;AAEN;AACA,cAAKU,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,MAAKc;AADH,SAAd;AAGD;AACF,K;;uEAEkB,UAACM,GAAD,EAAMC,KAAN,EAAgB;AACjC,UAAMrB,QAAQ,GAAG,MAAKmB,KAAL,CAAWnB,QAA5B;;AAEA,YAAKU,QAAL,CAAc;AACZV,QAAAA,QAAQ,oBACHA,QADG,sBAELoB,GAFK,EAECC,KAFD;AADI,OAAd;AAMD,K;;kEAEa,YAAM;AAElB;AACA,UAAI;AACFV,QAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,mBAA5B,EAAiD,gBAAe,MAAKH,KAAL,CAAWnB,QAA1B,CAAjD;AACD,OAFD,CAEE,iBAAM;AACNiB,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;AACF,K;;;;;;;wCAEmB;AAClB,WAAKK,WAAL;AACD;;;6BAEQ;AAAA,wBAKH,KAAKJ,KALF;AAAA,UAELpB,aAFK,eAELA,aAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,UAJK,eAILA,UAJK;AAOP,aACI,oBAAC,aAAD,CAAe,QAAf;AACI,QAAA,KAAK,EAAE;AACLF,UAAAA,aAAa,EAAbA,aADK;AAELC,UAAAA,QAAQ,EAARA,QAFK;AAGLC,UAAAA,UAAU,EAAVA,UAHK;AAILuB,UAAAA,gBAAgB,EAAE,KAAKA,gBAJlB;AAKLC,UAAAA,UAAU,EAAE,KAAKA,UALZ;AAMLC,UAAAA,WAAW,EAAE,KAAKA,WANb;AAOLH,UAAAA,WAAW,EAAE,KAAKA,WAPb;AAQLI,UAAAA,WAAW,EAAE,KAAKA;AARb,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWG,KAAKC,KAAL,CAAWC,QAXd,CADJ;AAeD;;;;EAjGuBjC,KAAK,CAACkC,S;;AAoGhC,eAAehC,WAAf","sourcesContent":["import React from 'react';\nimport WidgetContext from '../../context/widget-context';\n\nclass AppProvider extends React.Component {\n  state = {\n    currentWidget: '',\n    settings: {},\n    widgetOpen: false,\n  };\n\n  INITIAL_SETTINGS = {\n    backgroundColor: 'rgb(30,34,39)',\n    color: '#fffce1',\n    fontFamily: 'Apercu',\n    fontSize: '30',\n    lineHeight: '1.3',\n    paddingX: '2',\n    paddingY: '2',\n  };\n\n  openWidget = widget => {\n    this.setState({\n      currentWidget: widget,\n      widgetOpen: true,\n    });\n  };\n\n  closeWidget = () => {\n    this.setState({\n      widgetOpen: false,\n    });\n  };\n\n  getSettings = () => {\n\n    // Get settings from localstorage.\n    let settings;\n\n    try {\n      settings = window.localStorage.getItem('upwordly-settings') || this.INITIAL_SETTINGS;\n\n      this.setState({\n        settings: JSON.parse(settings),\n      }, () => console.log('settings state ', this.state.settings));\n    } catch {\n\n      // If settings cannot be loaded, load initial state.\n      this.setState({\n        settings: this.INITIAL_SETTINGS,\n      });\n    }\n  };\n\n  onChangeSettings = (key, value) => {\n    const settings = this.state.settings;\n\n    this.setState({\n      settings: {\n        ...settings,\n        [key]: value,\n      }\n    });\n  };\n\n  setSettings = () => {\n\n    // Save settings to localstorage.\n    try {\n      window.localStorage.setItem('upwordly-settings', JSON.stringify(this.state.settings));\n    } catch {\n      console.log('Error retrieving from localstorage.');\n    }\n  };\n\n  componentDidMount() {\n    this.getSettings();\n  }\n\n  render() {\n    const {\n      currentWidget,\n      settings,\n      widgetOpen,\n    } = this.state;\n\n    return (\n        <WidgetContext.Provider\n            value={{\n              currentWidget,\n              settings,\n              widgetOpen,\n              onChangeSettings: this.onChangeSettings,\n              openWidget: this.openWidget,\n              closeWidget: this.closeWidget,\n              getSettings: this.getSettings,\n              setSettings: this.setSettings\n            }}>\n          {this.props.children}\n        </WidgetContext.Provider>\n    );\n  }\n}\n\nexport default AppProvider;"]},"metadata":{},"sourceType":"module"}