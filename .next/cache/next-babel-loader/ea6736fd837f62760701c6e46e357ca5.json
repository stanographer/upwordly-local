{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleysakai/Developer/upwordly-local/src/components/Modal/Color.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport WidgetContext from '../../context/widget-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\nimport { faSave } from '@fortawesome/free-solid-svg-icons/index';\nvar ModalCloseButton = dynamic(function () {\n  return import('../Controls').then(function (el) {\n    return el.ModalCloseButton;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../Controls')];\n    },\n    modules: ['../Controls']\n  }\n});\nvar ModalSaveButton = dynamic(function () {\n  return import('../Controls').then(function (el) {\n    return el.ModalSaveButton;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../Controls')];\n    },\n    modules: ['../Controls']\n  }\n}); // Dynamically-loaded components.\n\nvar SketchPicker = dynamic(function () {\n  return import('react-color').then(function (el) {\n    return el.SketchPicker;\n  });\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-color')];\n    },\n    modules: ['react-color']\n  }\n});\n\nvar Color = function Color() {\n  var _useState = useState('fg'),\n      _useState2 = _slicedToArray(_useState, 2),\n      bgFg = _useState2[0],\n      setBgFg = _useState2[1];\n\n  return React.createElement(WidgetContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (context) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"w-full max-w-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"flex list-style-none mp-start-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"flex-1 mx-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: bgFg === 'fg' ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg' : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4',\n      href: \"#\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        setBgFg('fg');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Foreground\")), React.createElement(\"li\", {\n      className: \"flex-1 mx-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: bgFg === 'bg' ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg' : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4',\n      href: \"#\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        setBgFg('bg');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Background\"))), React.createElement(\"div\", {\n      className: bgFg === 'fg' ? 'px-3 pt-4' : 'visually-hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\",\n      htmlFor: \"grid-last-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Foreground\"), React.createElement(SketchPicker, {\n      color: context.settings.color,\n      onChangeComplete: function onChangeComplete(color) {\n        return context.onChangeSettings('color', color.hex);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: bgFg === 'bg' ? 'px-3 pt-4' : 'visually-hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\",\n      htmlFor: \"grid-last-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Background Color\"), React.createElement(SketchPicker, {\n      color: context.settings.backgroundColor,\n      onChangeComplete: function onChangeComplete(color) {\n        return context.onChangeSettings('backgroundColor', color.hex);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(ModalSaveButton, {\n      context: context,\n      label: \"Save Font Settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(ModalCloseButton, {\n      context: context,\n      label: \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  });\n};\n\nexport default Color;","map":{"version":3,"sources":["/Users/stanleysakai/Developer/upwordly-local/src/components/Modal/Color.jsx"],"names":["React","Fragment","useState","dynamic","WidgetContext","FontAwesomeIcon","faSave","ModalCloseButton","then","el","ModalSaveButton","SketchPicker","Color","bgFg","setBgFg","context","e","preventDefault","settings","color","onChangeSettings","hex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport WidgetContext from '../../context/widget-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\nimport { faSave } from '@fortawesome/free-solid-svg-icons/index';\n\nconst ModalCloseButton = dynamic(() => import('../Controls')\n    .then(el => el.ModalCloseButton))\n;\nconst ModalSaveButton = dynamic(() => import('../Controls')\n    .then(el => el.ModalSaveButton));\n\n// Dynamically-loaded components.\nconst SketchPicker = dynamic(() => import('react-color')\n    .then(el => el.SketchPicker));\n\nconst Color = () => {\n  let [bgFg, setBgFg] = useState('fg');\n\n  return (\n      <WidgetContext.Consumer>\n        {context => (\n            <Fragment>\n              <form className=\"w-full max-w-sm\">\n                <ul className=\"flex list-style-none mp-start-none\">\n                  <li className=\"flex-1 mx-2\">\n                    <a className={bgFg === 'fg'\n                        ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg'\n                        : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4'}\n                       href=\"#\"\n                       onClick={e => {\n                         e.preventDefault();\n                         setBgFg('fg');\n                       }}>Foreground</a>\n                  </li>\n                  <li className=\"flex-1 mx-2\">\n                    <a className={bgFg === 'bg'\n                        ? 'text-center block border border-brightGreen rounded py-2 px-4 bg-teal-200 text-bg'\n                        : 'text-center block border border-white rounded text-teal-200 hover:border-transparent hover:text-bg hover:bg-teal-200 py-2 px-4'}\n                       href=\"#\"\n                    onClick={e => {\n                      e.preventDefault();\n                      setBgFg('bg');\n                    }}>Background</a>\n                  </li>\n                </ul>\n                <div className={bgFg === 'fg'\n                ? 'px-3 pt-4'\n                : 'visually-hidden'}>\n                  <label className=\"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\"\n                         htmlFor=\"grid-last-name\">\n                    Foreground\n                  </label>\n                  <SketchPicker\n                    color={context.settings.color}\n                    onChangeComplete={color => context.onChangeSettings('color', color.hex)}\n                  />\n                </div>\n                <div className={bgFg === 'bg'\n                ? 'px-3 pt-4'\n                : 'visually-hidden'}>\n                  <label className=\"block uppercase tracking-wide text-brightGreen text-xs font-bold mb-2\"\n                         htmlFor=\"grid-last-name\">\n                    Background Color\n                  </label>\n                  <SketchPicker\n                    color={context.settings.backgroundColor}\n                    onChangeComplete={color => context.onChangeSettings('backgroundColor', color.hex)}\n                  />\n                </div>\n                <ModalSaveButton\n                    context={context}\n                    label=\"Save Font Settings\"\n                />\n                <ModalCloseButton\n                    context={context}\n                    label=\"Close\"\n                />\n              </form>\n            </Fragment>\n        )}\n      </WidgetContext.Consumer>\n  );\n};\n\nexport default Color;"]},"metadata":{},"sourceType":"module"}